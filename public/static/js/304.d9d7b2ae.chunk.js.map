{"version":3,"file":"static/js/304.d9d7b2ae.chunk.js","mappings":"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","sources":["components/games/GameTicTacToeOnline.js"],"sourcesContent":["import React, { useEffect, useMemo, useRef, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { io } from 'socket.io-client';\r\n\r\nexport default function GameTicTacToeOnline() {\r\n  const [step, setStep] = useState('lobby'); // 'lobby' | 'game'\r\n  const [name, setName] = useState('');\r\n  const [code, setCode] = useState('');\r\n  const [mark, setMark] = useState(null); // 'X'|'O'\r\n  const [state, setState] = useState(null); // {board, turn, status, winner, names, code}\r\n  const [err, setErr] = useState('');\r\n  const socketRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const s = io('http://localhost:5000/tictactoe', { transports: ['websocket'] });\r\n    socketRef.current = s;\r\n\r\n    s.on('created', (payload) => {\r\n      setMark(payload.mark);\r\n      setCode(payload.code);\r\n      setState(payload.state);\r\n      setStep('game');\r\n    });\r\n    s.on('joined', (payload) => {\r\n      setMark(payload.mark);\r\n      setCode(payload.code);\r\n      setState(payload.state);\r\n      setStep('game');\r\n    });\r\n    s.on('state', (st) => setState(st));\r\n    s.on('room_closed', () => {\r\n      setErr('La partie est terminée (adversaire parti).');\r\n      setStep('lobby');\r\n      setMark(null); setCode(''); setState(null);\r\n    });\r\n    s.on('error_msg', (m) => setErr(m));\r\n\r\n    return () => { s.disconnect(); };\r\n  }, []);\r\n\r\n  const play = (idx) => {\r\n    if (!state || !code || !mark) return;\r\n    if (state.status !== 'playing') return;\r\n    if (state.turn !== mark) return;\r\n    if (state.board[idx]) return;\r\n    socketRef.current.emit('play', { code, idx, mark });\r\n  };\r\n\r\n  const reset = () => socketRef.current.emit('reset', { code });\r\n  const leave = () => socketRef.current.emit('leave', { code });\r\n\r\n  const statusLabel = useMemo(() => {\r\n    if (!state) return '';\r\n    if (state.status === 'won') return `Vainqueur: ${state.winner}`;\r\n    if (state.status === 'draw') return 'Match nul';\r\n    return `Tour: ${state.turn}`;\r\n  }, [state]);\r\n\r\n  if (step === 'lobby') {\r\n    return (\r\n      <div className=\"card\">\r\n        <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n          <h2 style={{ margin: 0 }}>Morpion en ligne</h2>\r\n          <Link className=\"week-btn\" to=\"/games\">↩ Retour</Link>\r\n        </div>\r\n        {err && <div style={{ color: 'crimson', margin: '8px 0' }}>{err}</div>}\r\n        <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: 12, marginTop: 12 }}>\r\n          <div className=\"card\">\r\n            <h3 style={{ marginTop: 0 }}>Créer une partie</h3>\r\n            <label>Votre pseudo<input value={name} onChange={(e) => setName(e.target.value)} placeholder=\"Pseudo\" /></label>\r\n            <button className=\"week-btn\" onClick={() => { setErr(''); socketRef.current.emit('create', { name: name || 'J1' }); }}>\r\n              Créer\r\n            </button>\r\n          </div>\r\n          <div className=\"card\">\r\n            <h3 style={{ marginTop: 0 }}>Rejoindre une partie</h3>\r\n            <label>Votre pseudo<input value={name} onChange={(e) => setName(e.target.value)} placeholder=\"Pseudo\" /></label>\r\n            <label>Code de salle<input value={code} onChange={(e) => setCode(e.target.value.toUpperCase())} placeholder=\"ABCDE\" /></label>\r\n            <button className=\"week-btn\" onClick={() => { setErr(''); socketRef.current.emit('join', { code, name: name || 'J2' }); }}>\r\n              Rejoindre\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // step === 'game'\r\n  return (\r\n    <div className=\"card\">\r\n      <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: 8 }}>\r\n        <h2 style={{ margin: 0 }}>Morpion en ligne</h2>\r\n        <div style={{ display: 'flex', gap: 8 }}>\r\n          <span className=\"pill pill--info\">Salle: {code}</span>\r\n          <Link className=\"week-btn\" to=\"/games\">↩ Menu</Link>\r\n        </div>\r\n      </div>\r\n      {state && (\r\n        <>\r\n          <div style={{ marginBottom: 8 }}>\r\n            Vous êtes: <b>{mark}</b> — {state?.names?.X || 'J1'} (X) vs {state?.names?.O || 'J2'} (O)\r\n          </div>\r\n          <div style={{ marginBottom: 8, color: 'var(--muted)' }}>{statusLabel}</div>\r\n          <div\r\n            role=\"grid\"\r\n            style={{\r\n              display: 'grid',\r\n              gridTemplateColumns: 'repeat(3, 100px)',\r\n              gridTemplateRows: 'repeat(3, 100px)',\r\n              gap: 6,\r\n              marginBottom: 10,\r\n            }}\r\n          >\r\n            {state.board.map((v, i) => (\r\n              <button\r\n                key={i}\r\n                role=\"gridcell\"\r\n                onClick={() => play(i)}\r\n                className=\"week-btn\"\r\n                style={{\r\n                  width: 100,\r\n                  height: 100,\r\n                  fontSize: 36,\r\n                  fontWeight: 800,\r\n                  background: v ? (v === 'X' ? '#2563eb' : '#10b981') : 'var(--panel)',\r\n                  borderColor: v ? 'transparent' : 'var(--line)',\r\n                  color: v ? '#fff' : 'var(--text)',\r\n                }}\r\n              >\r\n                {v || ''}\r\n              </button>\r\n            ))}\r\n          </div>\r\n          <div style={{ display: 'flex', gap: 8 }}>\r\n            <button className=\"week-btn\" onClick={reset}>Rejouer</button>\r\n            <button className=\"week-btn\" onClick={() => { leave(); setStep('lobby'); }}>Quitter</button>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}"],"names":["GameTicTacToeOnline","_state$names","_state$names2","step","setStep","useState","name","setName","code","setCode","mark","setMark","state","setState","err","setErr","socketRef","useRef","useEffect","s","io","transports","current","on","payload","st","m","disconnect","statusLabel","useMemo","status","concat","winner","turn","_jsxs","className","children","style","display","justifyContent","alignItems","_jsx","margin","Link","to","color","gridTemplateColumns","gap","marginTop","value","onChange","e","target","placeholder","onClick","emit","toUpperCase","marginBottom","_Fragment","names","X","O","role","gridTemplateRows","board","map","v","i","play","idx","width","height","fontSize","fontWeight","background","borderColor","reset"],"sourceRoot":""}