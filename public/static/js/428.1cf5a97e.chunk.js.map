{"version":3,"file":"static/js/428.1cf5a97e.chunk.js","mappings":"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","sources":["settings.js","components/Schedule.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useMemo, useState } from 'react';\r\n\r\nconst STORAGE_KEY = 'appSettings:v1';\r\n\r\nexport const defaultSettings = {\r\n  theme: {\r\n    mode: 'system', // 'system' | 'light' | 'dark'\r\n  },\r\n  ui: {\r\n    pxPerMin: 1.2,\r\n    dayMinW: 240,\r\n    hoursColW: 72,\r\n    colGap: 8,\r\n    colPad: 6,\r\n    slotHoverMinH: 128,\r\n    monthCellH: 120,     // <- nouveau (optionnel)\r\n    monthCellPad: 6,     // <- nouveau (optionnel)\r\n  },\r\n  schedule: {\r\n    days: 5,\r\n    timeStart: '08:00',\r\n    timeEnd: '19:00',\r\n    showNowLine: true,\r\n  },\r\n  events: {\r\n    days: 7,\r\n  },\r\n  ab: {\r\n    // base Monday/date et type sont déjà gérés dans Schedule via localStorage\r\n  },\r\n};\r\n\r\nexport const settingsSchema = {\r\n  theme: {\r\n    mode: { type: 'enum', options: ['system', 'light', 'dark'], label: 'Thème' },\r\n  },\r\n  ui: {\r\n    pxPerMin: { type: 'number', min: 0.8, max: 3, step: 0.1, label: 'Densité verticale (px/min)' },\r\n    dayMinW: { type: 'number', min: 160, max: 420, step: 10, label: 'Largeur min d’un jour (px)' },\r\n    hoursColW: { type: 'number', min: 56, max: 120, step: 2, label: 'Largeur colonne heures (px)' },\r\n    colGap: { type: 'number', min: 0, max: 24, step: 1, label: 'Espace entre colonnes (px)' },\r\n    colPad: { type: 'number', min: 0, max: 16, step: 1, label: 'Padding interne colonne (px)' },\r\n  },\r\n  schedule: {\r\n    timeStart: { type: 'time', label: 'Heure début' },\r\n    timeEnd: { type: 'time', label: 'Heure fin' },\r\n    showNowLine: { type: 'boolean', label: 'Afficher la ligne “maintenant”' },\r\n  },\r\n  events: {\r\n    // prêt pour plus tard\r\n  },\r\n};\r\n\r\nfunction deepMerge(base, patch) {\r\n  const out = Array.isArray(base) ? [...base] : { ...base };\r\n  for (const k of Object.keys(patch || {})) {\r\n    const v = patch[k];\r\n    if (v && typeof v === 'object' && !Array.isArray(v)) {\r\n      out[k] = deepMerge(base?.[k] || {}, v);\r\n    } else {\r\n      out[k] = v;\r\n    }\r\n  }\r\n  return out;\r\n}\r\n\r\nfunction loadSettings() {\r\n  try {\r\n    const raw = localStorage.getItem(STORAGE_KEY);\r\n    if (!raw) return defaultSettings;\r\n    const parsed = JSON.parse(raw);\r\n    return deepMerge(defaultSettings, parsed);\r\n  } catch {\r\n    return defaultSettings;\r\n  }\r\n}\r\n\r\nfunction saveSettings(s) {\r\n  try {\r\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(s));\r\n  } catch {}\r\n}\r\n\r\nconst SettingsContext = createContext({\r\n  settings: defaultSettings,\r\n  updateSettings: () => {},\r\n});\r\n\r\nexport function SettingsProvider({ children }) {\r\n  const [settings, setSettings] = useState(loadSettings);\r\n\r\n  const updateSettings = (patch) => {\r\n    setSettings((prev) => {\r\n      const next = deepMerge(prev, patch);\r\n      saveSettings(next);\r\n      return next;\r\n    });\r\n  };\r\n\r\n  // Thème (optionnel): pose un data-theme pour usage futur en CSS\r\n  useEffect(() => {\r\n    const root = document.documentElement;\r\n    const { mode } = settings.theme || {};\r\n    if (mode === 'light' || mode === 'dark') {\r\n      root.setAttribute('data-theme', mode);\r\n    } else {\r\n      root.removeAttribute('data-theme'); // laisse prefers-color-scheme\r\n    }\r\n  }, [settings.theme?.mode]);\r\n\r\n  const value = useMemo(() => ({ settings, updateSettings }), [settings]);\r\n  return <SettingsContext.Provider value={value}>{children}</SettingsContext.Provider>;\r\n}\r\n\r\nexport function useSettings() {\r\n  return useContext(SettingsContext);\r\n}\r\n\r\n// Utilitaires temps\r\nexport function timeToMin(t) {\r\n  if (!t || typeof t !== 'string') return undefined;\r\n  const [h, m] = t.split(':').map(Number);\r\n  if (Number.isNaN(h) || Number.isNaN(m)) return undefined;\r\n  return h * 60 + m;\r\n}\r\n\r\n// Variables CSS pour l’UI (à poser sur un wrapper via style={cssVars(settings)})\r\nexport function cssVars(s) {\r\n  const ui = s?.ui || {};\r\n  const toNum = (v, d) => (typeof v === 'number' && !Number.isNaN(v) ? v : d);\r\n\r\n  const pxPerMin = toNum(ui.pxPerMin, 1.2);\r\n  const hoursColW = toNum(ui.hoursColW, 72);\r\n  const dayMinW = toNum(ui.dayMinW, 240);\r\n  const colGap = toNum(ui.colGap, 8);\r\n  const colPad = toNum(ui.colPad, 6);\r\n  const slotHoverMinH = toNum(ui.slotHoverMinH, 128);\r\n  const monthCellH = toNum(ui.monthCellH, 120);\r\n  const monthCellPad = toNum(ui.monthCellPad, 6);\r\n\r\n  return {\r\n    '--px-per-min': String(pxPerMin),\r\n    '--hours-col-w': `${hoursColW}px`,\r\n    '--day-min-w': `${dayMinW}px`,\r\n    '--col-gap': `${colGap}px`,\r\n    '--col-pad': `${colPad}px`,\r\n    '--slot-hover-min-h': `${slotHoverMinH}px`,\r\n    '--month-cell-h': `${monthCellH}px`,\r\n    '--month-cell-pad': `${monthCellPad}px`,\r\n  };\r\n}","import React, { useEffect, useMemo, useRef, useState } from 'react';\r\nimport API from '../api';\r\nimport './Schedule.css';\r\nimport { useSettings, cssVars, timeToMin } from '../settings';\r\n\r\nconst DAYS_5 = ['Lundi', 'Mardi', 'Mercredi', 'Jeudi', 'Vendredi'];\r\nconst START_MIN = 8 * 60;\r\nconst END_MIN = 19 * 60;\r\n// Densité verticale (px/min). Plus petit = plus compact\r\nconst PX_PER_MIN = 1.2;\r\nconst DAY_MIN_W = 240;\r\n\r\nfunction parseTime(t) {\r\n  // \"HH:MM\" -> minutes\r\n  if (!t) return 0;\r\n  const [h, m] = t.split(':').map(Number);\r\n  return h * 60 + (m || 0);\r\n}\r\n\r\nfunction getMonday(date = new Date()) {\r\n  const d = new Date(date);\r\n  d.setHours(0, 0, 0, 0);\r\n  const day = d.getDay(); // 0=Sun..6=Sat\r\n  const diff = (day === 0 ? -6 : 1 - day); // back to Monday\r\n  d.setDate(d.getDate() + diff);\r\n  return d;\r\n}\r\n\r\nfunction formatRange(monday) {\r\n  const end = new Date(monday);\r\n  end.setDate(end.getDate() + 4);\r\n  return `Semaine du ${monday.toLocaleDateString()} au ${end.toLocaleDateString()}`;\r\n}\r\n\r\nfunction colorForSubject(subject) {\r\n  const palette = [\r\n    ['#DBEAFE', '#1E3A8A'], // blue\r\n    ['#DCFCE7', '#065F46'], // green\r\n    ['#FCE7F3', '#9D174D'], // pink\r\n    ['#FEF3C7', '#92400E'], // amber\r\n    ['#EDE9FE', '#5B21B6'], // violet\r\n  ];\r\n  let hash = 0;\r\n  for (let i = 0; i < subject.length; i++) hash = (hash * 31 + subject.charCodeAt(i)) | 0;\r\n  const [bg, border] = palette[Math.abs(hash) % palette.length];\r\n  return { bg, border };\r\n}\r\n\r\nfunction darkenHex(hex, amount = 0.2) {\r\n  // hex \"#RRGGBB\" -> darken by amount\r\n  try {\r\n    const c = hex.replace('#', '');\r\n    const r = parseInt(c.slice(0,2), 16);\r\n    const g = parseInt(c.slice(2,4), 16);\r\n    const b = parseInt(c.slice(4,6), 16);\r\n    const dr = Math.max(0, Math.min(255, Math.floor(r * (1 - amount))));\r\n    const dg = Math.max(0, Math.min(255, Math.floor(g * (1 - amount))));\r\n    const db = Math.max(0, Math.min(255, Math.floor(b * (1 - amount))));\r\n    return `#${dr.toString(16).padStart(2,'0')}${dg.toString(16).padStart(2,'0')}${db.toString(16).padStart(2,'0')}`;\r\n  } catch {\r\n    return '#999999';\r\n  }\r\n}\r\n\r\n// Helpers contraste texte\r\nfunction hexToRgb(hex) {\r\n  if (!hex) return null;\r\n  const c = hex.replace('#', '');\r\n  const full = c.length === 3 ? c.split('').map((ch) => ch + ch).join('') : c;\r\n  const r = parseInt(full.slice(0, 2), 16);\r\n  const g = parseInt(full.slice(2, 4), 16);\r\n  const b = parseInt(full.slice(4, 6), 16);\r\n  if ([r, g, b].some((v) => Number.isNaN(v))) return null;\r\n  return { r, g, b };\r\n}\r\nfunction yiq(r, g, b) {\r\n  // YIQ quick contrast: >186 => clair\r\n  return (r * 299 + g * 587 + b * 114) / 1000;\r\n}\r\nfunction textColorsForBg(bgHex) {\r\n  const rgb = hexToRgb(bgHex);\r\n  if (!rgb) return { text: '#111111', muted: 'rgba(17,17,17,0.7)', shadow: 'none' };\r\n  const y = yiq(rgb.r, rgb.g, rgb.b);\r\n  if (y >= 186) {\r\n    // Fond clair -> texte sombre\r\n    return {\r\n      text: '#111111',\r\n      muted: 'rgba(17,17,17,0.6)',\r\n      shadow: '0 1px 0 rgba(255,255,255,0.5)',\r\n    };\r\n  }\r\n  // Fond sombre -> texte clair\r\n  return {\r\n    text: '#ffffff',\r\n    muted: 'rgba(255,255,255,0.75)',\r\n    shadow: '0 1px 0 rgba(0,0,0,0.4)',\r\n  };\r\n}\r\n\r\nfunction computeLayout(items, startMin = START_MIN, endMin = END_MIN, pxPerMin = PX_PER_MIN) {\r\n  // items: [{_id, day, startHour, endHour, subject, location}]\r\n  // returns: per day, slots with top/height/left/width and style\r\n  const byDay = DAYS_5.reduce((acc, d) => ({ ...acc, [d]: [] }), {});\r\n  items.forEach((it) => {\r\n    if (byDay[it.day]) byDay[it.day].push(it);\r\n  });\r\n\r\n  const result = {};\r\n  DAYS_5.forEach((day) => {\r\n    const arr = byDay[day]\r\n      .map((it) => {\r\n        const start = Math.max(parseTime(it.startHour), startMin);\r\n        const end = Math.min(parseTime(it.endHour), endMin);\r\n        return { ...it, start, end };\r\n      })\r\n      .filter((it) => it.end > it.start)\r\n      .sort((a, b) => (a.start - b.start) || (a.end - b.end));\r\n\r\n    // Overlap grouping + column assignment\r\n    let active = [];\r\n    let clusterId = -1;\r\n    const usedCols = new Set();\r\n    const clusters = new Map(); // id -> maxCols\r\n    const out = [];\r\n\r\n    const releaseEnded = (currentStart) => {\r\n      active = active.filter((x) => {\r\n        if (x.end <= currentStart) {\r\n          usedCols.delete(x._col);\r\n          return false;\r\n        }\r\n        return true;\r\n      });\r\n      // Quand on termine un cluster (plus d'actifs), démarrer un nouveau cluster\r\n      if (active.length === 0) {\r\n        usedCols.clear();\r\n        clusterId += 1;\r\n      }\r\n    };\r\n\r\n    arr.forEach((it) => {\r\n      // FIX: on ne ré-incrémente plus ici (évite le double incrément)\r\n      releaseEnded(it.start);\r\n\r\n      // smallest free column index\r\n      let col = 0;\r\n      while (usedCols.has(col)) col += 1;\r\n      usedCols.add(col);\r\n      active.push({ ...it, _col: col });\r\n\r\n      const maxCols = Math.max(col + 1, clusters.get(clusterId) || 0);\r\n      clusters.set(clusterId, maxCols);\r\n\r\n      const chosenBg = it.color && /^#([0-9a-f]{3}){1,2}$/i.test(it.color) ? it.color : null;\r\n      const fallback = colorForSubject(it.subject || '');\r\n      const bg = chosenBg || fallback.bg;\r\n      const border = chosenBg ? darkenHex(chosenBg, 0.35) : fallback.border;\r\n\r\n      const { text, muted, shadow } = textColorsForBg(bg);\r\n\r\n      out.push({\r\n        ...it,\r\n        clusterId,\r\n        col,\r\n        top: (it.start - startMin) * pxPerMin,\r\n        height: (it.end - it.start) * pxPerMin,\r\n        style: {\r\n          backgroundColor: bg,\r\n          borderColor: border,\r\n          textColor: text,\r\n          mutedColor: muted,\r\n          textShadow: shadow,\r\n        },\r\n      });\r\n    });\r\n\r\n    // normalize widths/lefts by cluster\r\n    const maxColsByCluster = Object.fromEntries(clusters.entries());\r\n    out.forEach((s) => {\r\n      const cols = maxColsByCluster[s.clusterId] || 1;\r\n      s.width = 100 / cols;\r\n      s.left = (s.col * 100) / cols;\r\n    });\r\n\r\n    result[day] = out;\r\n  });\r\n\r\n  return result;\r\n}\r\n\r\nfunction addDays(date, n) {\r\n  const d = new Date(date);\r\n  d.setDate(d.getDate() + n);\r\n  d.setHours(0, 0, 0, 0);\r\n  return d;\r\n}\r\nfunction sameDay(a, b) {\r\n  return a.getFullYear() === b.getFullYear() &&\r\n         a.getMonth() === b.getMonth() &&\r\n         a.getDate() === b.getDate();\r\n}\r\nfunction toYmd(d) {\r\n  const y = d.getFullYear();\r\n  const m = String(d.getMonth() + 1).padStart(2, '0');\r\n  const day = String(d.getDate()).padStart(2, '0');\r\n  return `${y}-${m}-${day}`;\r\n}\r\n\r\n// A/B helpers\r\nfunction mondayOf(d) { const x = new Date(d); x.setHours(0,0,0,0); return getMonday(x); }\r\nfunction weekTypeFor(monday, baseMonday, baseType) {\r\n  const a = mondayOf(monday).getTime();\r\n  const b = mondayOf(baseMonday).getTime();\r\n  const diffWeeks = Math.floor((a - b) / (7 * 24 * 3600 * 1000));\r\n  const even = (diffWeeks % 2) === 0;\r\n  return even ? baseType : (baseType === 'A' ? 'B' : 'A');\r\n}\r\n\r\nfunction Schedule() {\r\n  const [schedule, setSchedule] = useState([]);\r\n  const [pinnedEvents, setPinnedEvents] = useState([]);\r\n  const [exceptions, setExceptions] = useState([]);\r\n  const [form, setForm] = useState({\r\n    day: 'Lundi',\r\n    startHour: '',\r\n    endHour: '',\r\n    subject: '',\r\n    location: '',\r\n    color: '#DBEAFE',\r\n    status: 'normal',\r\n    weekType: '', // <- vide par défaut => visible en A et B\r\n  });\r\n  const [error, setError] = useState('');\r\n  const [monday, setMonday] = useState(() => getMonday());\r\n\r\n  // Base A/B configurable (persistée)\r\n  const [abBase, setAbBase] = useState(() => {\r\n    const storedMon = localStorage.getItem('abBaseMonday');\r\n    const storedType = localStorage.getItem('abBaseType') || 'A';\r\n    return {\r\n      monday: storedMon ? new Date(storedMon) : getMonday(),\r\n      type: storedType === 'B' ? 'B' : 'A',\r\n    };\r\n  });\r\n\r\n  const currentWeekType = useMemo(\r\n    () => weekTypeFor(monday, abBase.monday, abBase.type),\r\n    [monday, abBase]\r\n  );\r\n\r\n  useEffect(() => {\r\n    fetchSchedule();\r\n  fetchPinned();\r\n  }, []);\r\n\r\n  const fetchSchedule = async () => {\r\n    try {\r\n      const res = await API.get('/schedule');\r\n      setSchedule(res.data);\r\n      setError('');\r\n    } catch {\r\n      setError('Erreur chargement emploi du temps');\r\n    }\r\n  };\r\n\r\n  const fetchPinned = async () => {\r\n    try {\r\n      const me = await API.get('/user/me');\r\n      const ids = me.data?.pinnedEvents || [];\r\n      if (ids.length) {\r\n        // fetch each event (simple sequential for now; could batch filter by ids later)\r\n  // Fetch a larger batch then filter client side (évite endpoint spécifique pour l'instant)\r\n        const all = await API.get('/events?limit=500');\r\n        const map = new Map();\r\n        ids.forEach(i=>map.set(String(i), true));\r\n        const sel = (all.data?.events||all.data||[]).filter(e=>map.get(String(e._id)));\r\n        setPinnedEvents(sel);\r\n      } else setPinnedEvents([]);\r\n    } catch { /* ignore */ }\r\n  };\r\n\r\n  // Transform pinned events into schedule-like entries (date -> day name)\r\n  const pinnedSlots = useMemo(()=>{\r\n    const dayMap = { 1:'Lundi',2:'Mardi',3:'Mercredi',4:'Jeudi',5:'Vendredi',6:'Samedi',0:'Dimanche' };\r\n    return pinnedEvents.map(ev=>{\r\n      const d = new Date(ev.date);\r\n      const day = dayMap[d.getDay()];\r\n      return {\r\n        _id: 'PIN-'+ev._id,\r\n        day,\r\n        startHour: ev.startHour || '08:00',\r\n        endHour: ev.endHour || (ev.startHour ? ev.startHour : '09:00'),\r\n        subject: ev.title,\r\n        location: ev.location || (ev.club?.clubName ? ('Club '+ev.club.clubName) : ''),\r\n        color: ev.color || '#FCD34D',\r\n      };\r\n    }).filter(s=>DAYS_5.includes(s.day));\r\n  }, [pinnedEvents]);\r\n\r\n  const mergedSchedule = useMemo(()=> schedule.concat(pinnedSlots), [schedule, pinnedSlots]);\r\n  // Use mergedSchedule in place of schedule below\r\n\r\n  // Exceptions de la semaine\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const start = toYmd(monday);\r\n        const end = toYmd(addDays(monday, 6));\r\n        const { data } = await API.get(`/schedule/exceptions`, { params: { start, end } });\r\n        setExceptions(data || []);\r\n      } catch {}\r\n    })();\r\n  }, [monday]);\r\n\r\n  const handleChange = (e) => {\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleAdd = async (e) => {\r\n    e.preventDefault();\r\n    if (!form.subject || !form.startHour || !form.endHour) {\r\n      setError('Veuillez remplir tous les champs obligatoires.');\r\n      return;\r\n    }\r\n    if (form.startHour >= form.endHour) {\r\n      setError(\"L'heure de début doit être avant l'heure de fin.\");\r\n      return;\r\n    }\r\n    try {\r\n      const payload = { ...form };\r\n      if (!payload.weekType) delete payload.weekType; // n’envoie pas => A et B\r\n      await API.post('/schedule', payload);\r\n      fetchSchedule();\r\n      setForm({\r\n        day: 'Lundi',\r\n        startHour: '',\r\n        endHour: '',\r\n        subject: '',\r\n        location: '',\r\n        color: '#DBEAFE',\r\n        status: 'normal',\r\n        weekType: '', // reste “toutes”\r\n      });\r\n      setError('');\r\n    } catch (err) {\r\n      setError(err.response?.data?.error || err.response?.data?.message || 'Erreur ajout');\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      await API.delete(`/schedule/${id}`);\r\n      fetchSchedule();\r\n      setError('');\r\n    } catch {\r\n      setError('Erreur suppression');\r\n    }\r\n  };\r\n\r\n  const handleColorChange = async (id, color) => {\r\n    try {\r\n      const { data } = await API.patch(`/schedule/${id}/color`, { color });\r\n      if (Array.isArray(data.updated)) {\r\n        setSchedule(data.updated);\r\n      } else {\r\n        const target = schedule.find(s => s._id === id);\r\n        if (target) {\r\n          setSchedule(prev => prev.map(s => s.subject === target.subject ? { ...s, color } : s));\r\n        }\r\n      }\r\n    } catch {\r\n      setError('Erreur mise à jour couleur');\r\n    }\r\n  };\r\n\r\n  // Exceptions par jour (inchangé)\r\n  const handleStatusChangeOnDate = async (id, dayDate, status) => {\r\n    try {\r\n      const ymd = toYmd(dayDate);\r\n      const { data } = await API.patch(`/schedule/${id}/status-on-date`, { date: ymd, status });\r\n      setExceptions(prev => {\r\n        const idx = prev.findIndex(ex => ex.schedule === id && sameDay(new Date(ex.date), dayDate));\r\n        if (idx >= 0) {\r\n          const copy = prev.slice();\r\n          copy[idx] = data;\r\n          return copy;\r\n        }\r\n        return [...prev, data];\r\n      });\r\n    } catch {\r\n      setError('Erreur mise à jour état (jour)');\r\n    }\r\n  };\r\n\r\n  // Settings (manquants) + bornes horaires dynamiques\r\n  const { settings } = useSettings();\r\n  const startMin = timeToMin(settings?.schedule?.timeStart) ?? START_MIN;\r\n  const endMin = timeToMin(settings?.schedule?.timeEnd) ?? END_MIN;\r\n  const pxPerMin = settings?.ui?.pxPerMin ?? PX_PER_MIN;\r\n  // Zoom & pan state\r\n  const [zoom, setZoom] = useState(1);\r\n  const scrollRef = useRef(null);\r\n  const isPanningRef = useRef(false);\r\n  const panStartRef = useRef({ x: 0, y: 0, left: 0, top: 0 });\r\n\r\n  const clamp = (v, min, max) => Math.max(min, Math.min(max, v));\r\n  const onWheel = (e) => {\r\n    // prevent sliding; use wheel to zoom instead\r\n    e.preventDefault();\r\n    const container = scrollRef.current;\r\n    if (!container) return;\r\n    const rect = container.getBoundingClientRect();\r\n    const pointerY = e.clientY - rect.top + container.scrollTop;\r\n    const old = zoom;\r\n    const next = clamp(old * (e.deltaY < 0 ? 1.1 : 0.9), 0.6, 3);\r\n    if (next === old) return;\r\n    // keep the point under cursor anchored vertically\r\n    const scale = next / old;\r\n    const newScrollTop = pointerY * scale - (e.clientY - rect.top);\r\n    setZoom(next);\r\n    // apply after layout tick\r\n    requestAnimationFrame(() => { container.scrollTop = newScrollTop; });\r\n  };\r\n\r\n  const onMouseDown = (e) => {\r\n    const container = scrollRef.current; if (!container) return;\r\n    isPanningRef.current = true;\r\n    panStartRef.current = {\r\n      x: e.clientX,\r\n      y: e.clientY,\r\n      left: container.scrollLeft,\r\n      top: container.scrollTop,\r\n    };\r\n    container.style.cursor = 'grabbing';\r\n    window.addEventListener('mousemove', onMouseMove);\r\n    window.addEventListener('mouseup', onMouseUp);\r\n  };\r\n  const onMouseMove = (e) => {\r\n    if (!isPanningRef.current) return;\r\n    const container = scrollRef.current; if (!container) return;\r\n    const dx = e.clientX - panStartRef.current.x;\r\n    const dy = e.clientY - panStartRef.current.y;\r\n    container.scrollLeft = panStartRef.current.left - dx;\r\n    container.scrollTop = panStartRef.current.top - dy;\r\n  };\r\n  const onMouseUp = () => {\r\n    isPanningRef.current = false;\r\n    const container = scrollRef.current; if (container) container.style.cursor = 'grab';\r\n    window.removeEventListener('mousemove', onMouseMove);\r\n    window.removeEventListener('mouseup', onMouseUp);\r\n  };\r\n\r\n  // Filtrer les cours selon la semaine A/B; ceux sans weekType s’affichent toujours\r\n  const displayed = useMemo(\r\n    () => mergedSchedule.filter((s) => !s.weekType || s.weekType === currentWeekType),\r\n    [mergedSchedule, currentWeekType]\r\n  );\r\n\r\n  // FIX: passer pxPerMin pour aligner les hauteurs avec la variable CSS\r\n  const layout = useMemo(\r\n    () => computeLayout(displayed, startMin, endMin, pxPerMin),\r\n    [displayed, startMin, endMin, pxPerMin]\r\n  );\r\n\r\n  // Ligne “maintenant”\r\n  const now = new Date();\r\n  const todayDayName = DAYS_5[(now.getDay() + 6) % 7];\r\n  const nowMin = now.getHours() * 60 + now.getMinutes();\r\n  const showNow = (settings?.schedule?.showNowLine ?? true) && nowMin >= startMin && nowMin <= endMin;\r\n\r\n  const prevWeek = () => {\r\n    const d = new Date(monday);\r\n    d.setDate(d.getDate() - 7);\r\n    setMonday(d);\r\n  };\r\n  const nextWeek = () => {\r\n    const d = new Date(monday);\r\n    d.setDate(d.getDate() + 7);\r\n    setMonday(d);\r\n  };\r\n\r\n  // Définir la semaine affichée comme base A ou B\r\n  const setThisWeekAs = (type) => {\r\n    localStorage.setItem('abBaseMonday', toYmd(monday));\r\n    localStorage.setItem('abBaseType', type);\r\n    setAbBase({ monday, type });\r\n  };\r\n\r\n  const weekDays = useMemo(() => Array.from({ length: 7 }, (_, i) => addDays(monday, i)), [monday]);\r\n\r\n  return (\r\n    <div\r\n      className=\"schedule-wrap\"\r\n      style={{\r\n        ...cssVars(settings),\r\n  '--px-per-min': pxPerMin * zoom,\r\n        '--day-min-w': `${settings?.ui?.dayMinW ?? DAY_MIN_W}px`,\r\n        '--col-pad': `${settings?.ui?.colPad ?? 6}px`,\r\n      }}\r\n    >\r\n      <div className=\"week-head\">\r\n        <h2>Mon emploi du temps</h2>\r\n        <span className=\"badge badge-ab\" style={{ marginLeft: 8 }}>\r\n          Semaine {currentWeekType}\r\n        </span>\r\n        <div className=\"actions\">\r\n          <button className=\"week-btn\" onClick={prevWeek}>⟵ Semaine précédente</button>\r\n          <button className=\"week-btn\" onClick={nextWeek}>Semaine suivante ⟶</button>\r\n          <button className=\"week-btn\" onClick={() => setThisWeekAs('A')} title=\"Définir la semaine affichée comme A\">Définir comme A</button>\r\n          <button className=\"week-btn\" onClick={() => setThisWeekAs('B')} title=\"Définir la semaine affichée comme B\">Définir comme B</button>\r\n        </div>\r\n      </div>\r\n      <div style={{ color: 'var(--muted)', marginBottom: 12 }}>{formatRange(monday)}</div>\r\n      {error && <div style={{ color: 'crimson', marginBottom: 12 }}>{error}</div>}\r\n\r\n      {/* Viewport with drag-to-pan and wheel-zoom */}\r\n      <div\r\n        className=\"grid-scroll\"\r\n        ref={scrollRef}\r\n        onWheel={onWheel}\r\n        onMouseDown={onMouseDown}\r\n        style={{ cursor: 'grab' }}\r\n      >\r\n        <div className=\"schedule-grid\">\r\n          <div className=\"hours-col\" aria-hidden=\"true\">\r\n            {Array.from({ length: endMin - startMin }, (_, i) => i)\r\n              .filter((m) => m % 60 === 0)\r\n              .map((m) => {\r\n                const h = Math.floor((startMin + m) / 60);\r\n                const mm = String((startMin + m) % 60).padStart(2, '0');\r\n                return (\r\n                  <div className=\"hour-label\" key={m}>\r\n                    {String(h).padStart(2, '0')}:{mm}\r\n                  </div>\r\n                );\r\n              })}\r\n          </div>\r\n\r\n          {DAYS_5.map((d, idx) => {\r\n            const dayDate = weekDays[idx];\r\n            return (\r\n              <div className=\"day-col\" key={d}>\r\n                <div className=\"day-header\">{d}</div>\r\n                <div className=\"day-content\">\r\n                  {d === todayDayName && showNow && (\r\n                    <div\r\n                      className=\"now-line\"\r\n                      style={{ top: (nowMin - startMin) * (settings?.ui?.pxPerMin ?? PX_PER_MIN) }}\r\n                    />\r\n                  )}\r\n                  {layout[d]?.map((slot) => {\r\n                    // Exception par date\r\n                    const ex = exceptions.find(e => e.schedule === slot._id && sameDay(new Date(e.date), dayDate));\r\n                    const statusForDay = ex?.status || 'normal';\r\n\r\n                    const extraStyle =\r\n                      statusForDay === 'annule'\r\n                        ? { opacity: 0.6, filter: 'grayscale(0.3)', borderStyle: 'dashed' }\r\n                        : statusForDay === 'prof_absent'\r\n                        ? { borderStyle: 'dashed' }\r\n                        : {};\r\n\r\n                    return (\r\n                      <div\r\n                        key={slot._id + '-' + d}\r\n                        className=\"slot\"\r\n                        style={{\r\n                          // variables pour positionner la case\r\n                          '--slot-top': `${slot.top}px`,\r\n                          '--slot-height': `${slot.height}px`,\r\n                          '--slot-left': `calc(${slot.left}% + var(--col-pad))`,\r\n                          '--slot-width': `calc(${slot.width}% - (var(--col-pad) * 2))`,\r\n\r\n                          backgroundColor: slot.style.backgroundColor,\r\n                          border: `1px solid ${slot.style.borderColor}`,\r\n                          color: slot.style.textColor,\r\n                          textShadow: slot.style.textShadow,\r\n                          ...extraStyle,\r\n                        }}\r\n                        title={`${slot.subject} • ${slot.startHour}–${slot.endHour}${slot.location ? ` @ ${slot.location}` : ''}`}\r\n                      >\r\n                        <div style={{ display: 'flex', justifyContent: 'space-between', gap: 8, alignItems: 'center' }}>\r\n                          <div className=\"slot-title\">{slot.subject}</div>\r\n                          <div className=\"slot-badges\">\r\n                            {slot.weekType ? <span className=\"badge badge-ab\">{slot.weekType}</span> : <span className=\"badge badge-all\">A/B</span>}\r\n                            {statusForDay === 'annule' && <span className=\"badge badge-annule\">Annulé</span>}\r\n                            {statusForDay === 'prof_absent' && <span className=\"badge badge-prof\">Prof absent</span>}\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"slot-time\" style={{ color: slot.style.mutedColor }}>\r\n                          {slot.startHour} – {slot.endHour}\r\n                        </div>\r\n                        {slot.location && (\r\n                          <div className=\"slot-loc\" style={{ color: slot.style.mutedColor }}>\r\n                            @ {slot.location}\r\n                          </div>\r\n                        )}\r\n\r\n                        {/* Actions en overlay (déjà présentes) */}\r\n                        <div className=\"slot-controls\">\r\n                          <select\r\n                            value={statusForDay}\r\n                            onChange={(e) => handleStatusChangeOnDate(slot._id, dayDate, e.target.value)}\r\n                            title=\"État du cours (pour ce jour)\"\r\n                          >\r\n                            <option value=\"normal\">Normal</option>\r\n                            <option value=\"annule\">Cours annulé</option>\r\n                            <option value=\"prof_absent\">Prof absent</option>\r\n                          </select>\r\n\r\n                          <label title=\"Changer la couleur\" style={{ cursor: 'pointer' }}>\r\n                            🎨\r\n                            <input\r\n                              type=\"color\"\r\n                              value={schedule.find(s => s._id === slot._id)?.color || slot.style.backgroundColor}\r\n                              onChange={(e) => handleColorChange(slot._id, e.target.value)}\r\n                              style={{ width: 0, height: 0, opacity: 0, position: 'absolute' }}\r\n                            />\r\n                          </label>\r\n\r\n                          <button\r\n                            onClick={() => handleDelete(slot._id)}\r\n                            style={{ background: 'transparent', border: 'none', color: slot.style.mutedColor, cursor: 'pointer' }}\r\n                            aria-label=\"Supprimer\"\r\n                            title=\"Supprimer\"\r\n                          >\r\n                            🗑️\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n\r\n      <h3 style={{ marginTop: 16 }}>Ajouter un cours</h3>\r\n      <form onSubmit={handleAdd} style={{ display: 'grid', gridTemplateColumns: 'repeat(8, minmax(140px, 1fr))', gap: 8 }}>\r\n        <label>\r\n          Jour\r\n          <select name=\"day\" value={form.day} onChange={handleChange}>\r\n            {DAYS_5.map((d) => <option key={d}>{d}</option>)}\r\n          </select>\r\n        </label>\r\n        <label>\r\n          Début\r\n          <input name=\"startHour\" type=\"time\" min=\"08:00\" max=\"19:00\" step=\"300\" value={form.startHour} onChange={handleChange} required />\r\n        </label>\r\n        <label>\r\n          Fin\r\n          <input name=\"endHour\" type=\"time\" min=\"08:00\" max=\"19:00\" step=\"300\" value={form.endHour} onChange={handleChange} required />\r\n        </label>\r\n        <label>\r\n          Matière\r\n          <input name=\"subject\" placeholder=\"Matière\" value={form.subject} onChange={handleChange} required />\r\n        </label>\r\n        <label>\r\n          Lieu (facultatif)\r\n          <input name=\"location\" placeholder=\"Lieu\" value={form.location} onChange={handleChange} />\r\n        </label>\r\n        <label>\r\n          Couleur\r\n          <input name=\"color\" type=\"color\" value={form.color} onChange={handleChange} />\r\n        </label>\r\n        <label>\r\n          Semaine\r\n          <select name=\"weekType\" value={form.weekType} onChange={(e) => setForm(f => ({ ...f, weekType: e.target.value }))}>\r\n            <option value=\"\">Toutes (A & B)</option>\r\n            <option value=\"A\">A</option>\r\n            <option value=\"B\">B</option>\r\n          </select>\r\n        </label>\r\n        <label>\r\n          État (par défaut)\r\n          <select name=\"status\" value={form.status} onChange={handleChange}>\r\n            <option value=\"normal\">Normal</option>\r\n            <option value=\"annule\">Cours annulé</option>\r\n            <option value=\"prof_absent\">Prof absent</option>\r\n          </select>\r\n        </label>\r\n        <div style={{ gridColumn: '1 / -1' }}>\r\n          <button type=\"submit\">Ajouter</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Schedule;"],"names":["defaultSettings","theme","mode","ui","pxPerMin","dayMinW","hoursColW","colGap","colPad","slotHoverMinH","monthCellH","monthCellPad","schedule","days","timeStart","timeEnd","showNowLine","events","ab","SettingsContext","createContext","settings","updateSettings","useSettings","useContext","timeToMin","t","h","m","split","map","Number","isNaN","cssVars","s","toNum","v","d","String","concat","DAYS_5","parseTime","getMonday","date","arguments","length","undefined","Date","setHours","day","getDay","diff","setDate","getDate","formatRange","monday","end","toLocaleDateString","textColorsForBg","bgHex","rgb","hex","c","replace","full","ch","join","r","parseInt","slice","g","b","some","hexToRgb","text","muted","shadow","computeLayout","items","startMin","endMin","byDay","reduce","acc","_objectSpread","forEach","it","push","result","arr","start","Math","max","startHour","min","endHour","filter","sort","a","active","clusterId","usedCols","Set","clusters","Map","out","currentStart","x","delete","_col","clear","col","has","add","maxCols","get","set","chosenBg","color","test","fallback","subject","palette","hash","i","charCodeAt","bg","border","abs","colorForSubject","amount","dr","floor","dg","db","toString","padStart","_unused","darkenHex","top","height","style","backgroundColor","borderColor","textColor","mutedColor","textShadow","maxColsByCluster","Object","fromEntries","entries","cols","width","left","addDays","n","sameDay","getFullYear","getMonth","toYmd","y","mondayOf","_timeToMin","_settings$schedule","_timeToMin2","_settings$schedule2","_settings$ui$pxPerMin","_settings$ui","_settings$schedule$sh","_settings$schedule3","_settings$ui$dayMinW","_settings$ui2","_settings$ui$colPad","_settings$ui3","setSchedule","useState","pinnedEvents","setPinnedEvents","exceptions","setExceptions","form","setForm","location","status","weekType","error","setError","setMonday","abBase","setAbBase","storedMon","localStorage","getItem","storedType","type","currentWeekType","useMemo","baseMonday","baseType","getTime","weekTypeFor","useEffect","fetchSchedule","fetchPinned","async","res","API","data","_unused2","_me$data","ids","_all$data","all","sel","e","_id","_unused3","pinnedSlots","dayMap","ev","_ev$club","title","club","clubName","includes","mergedSchedule","params","_unused4","handleChange","target","name","value","zoom","setZoom","scrollRef","useRef","isPanningRef","panStartRef","onMouseMove","current","container","dx","clientX","dy","clientY","scrollLeft","scrollTop","onMouseUp","cursor","window","removeEventListener","displayed","layout","now","todayDayName","nowMin","getHours","getMinutes","showNow","setThisWeekAs","setItem","weekDays","Array","from","_","_jsxs","className","children","_jsx","marginLeft","onClick","prevWeek","nextWeek","marginBottom","ref","onWheel","preventDefault","rect","getBoundingClientRect","pointerY","old","next","deltaY","clamp","newScrollTop","requestAnimationFrame","onMouseDown","addEventListener","mm","idx","_settings$ui$pxPerMin2","_settings$ui4","_layout$d","dayDate","slot","_schedule$find","ex","find","statusForDay","extraStyle","opacity","borderStyle","display","justifyContent","gap","alignItems","onChange","id","ymd","patch","prev","findIndex","copy","_unused7","handleStatusChangeOnDate","isArray","updated","_unused6","handleColorChange","position","_unused5","handleDelete","background","marginTop","onSubmit","payload","post","err","_err$response","_err$response$data","_err$response2","_err$response2$data","response","message","gridTemplateColumns","step","required","placeholder","f","gridColumn"],"sourceRoot":""}