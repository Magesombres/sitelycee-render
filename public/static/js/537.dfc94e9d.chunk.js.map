{"version":3,"file":"static/js/537.dfc94e9d.chunk.js","mappings":"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","sources":["components/games/CardBattle.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\n\r\nconst WARLORD_ATK = 2;\r\n\r\nfunction makeDeck(seedOwner) {\r\n  const base = [\r\n    { id: 'c1', name: 'Soldat', cost: 1, atk: 1, hp: 2, categories:['Empire','Infanterie'], faction:'Empire', effect:'' },\r\n    { id: 'c2', name: 'Archer', cost: 2, atk: 2, hp: 2, charge: true, categories:['Empire','Infanterie'], faction:'Empire', effect:'Charge' },\r\n    { id: 'c3', name: 'Garde', cost: 2, atk: 1, hp: 4, taunt: true, categories:['Empire','Infanterie'], faction:'Empire', effect:'Provocation' },\r\n    { id: 'c4', name: 'Champion', cost: 3, atk: 3, hp: 3, shield: true, categories:['Empire','Infanterie'], faction:'Empire', effect:'Bouclier' },\r\n    { id: 'c5', name: 'Berserker', cost: 4, atk: 5, hp: 2, lifesteal: true, categories:['Empire','Infanterie'], faction:'Empire', effect:'Vol de vie' },\r\n    { id: 'c6', name: 'Paladin', cost: 5, atk: 4, hp: 5, lifesteal: true, categories:['Empire','Infanterie'], faction:'Empire', effect:'Vol de vie' },\r\n  ];\r\n  const deck = [];\r\n  for (let i = 0; i < 3; i++) {\r\n    base.forEach(c => deck.push({ ...c, uid: seedOwner + '_' + c.id + '_' + i + '_' + Math.random().toString(36).slice(2,7) }));\r\n  }\r\n  // shuffle\r\n  for (let i = deck.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random()* (i+1));\r\n    [deck[i], deck[j]] = [deck[j], deck[i]];\r\n  }\r\n  return deck;\r\n}\r\n\r\nexport default function CardBattle() {\r\n  // Ecran courant: home | battle | deck | shop | event | clan\r\n  const [screen, setScreen] = useState('home');\r\n  const aiTimerRef = useRef(null);\r\n  const aiTimeoutsRef = useRef([]); // track all queued AI timeouts for cancellation\r\n  const battleInitRef = useRef(false);\r\n  const turnTimerRef = useRef(null);\r\n  const progressTickRef = useRef(null);\r\n  const [turnEndsAt, setTurnEndsAt] = useState(null); // timestamp ms\r\n  const [turnProgress, setTurnProgress] = useState(0); // 0..1\r\n\r\n  const [p1, setP1] = useState({\r\n    name: 'Vous',\r\n    hp: 20,\r\n    deck: makeDeck('P1'),\r\n    hand: [],\r\n    field: [],\r\n    energy: 0,\r\n    maxEnergy: 0,\r\n    fatigue: 0,\r\n    warlordUsed: false,\r\n    warlordName: 'Seigneur',\r\n  });\r\n  const [p2, setP2] = useState({\r\n    name: 'IA',\r\n    hp: 20,\r\n    deck: makeDeck('P2'),\r\n    hand: [],\r\n    field: [],\r\n    energy: 0,\r\n    maxEnergy: 0,\r\n    fatigue: 0,\r\n    warlordUsed: false,\r\n    warlordName: 'Seigneur IA',\r\n  });\r\n  const [turn, setTurn] = useState('P1'); // P1 ou P2\r\n  const [log, setLog] = useState([]);\r\n  const [selectedAttacker, setSelectedAttacker] = useState(null);\r\n  const [winner, setWinner] = useState(null);\r\n  const [turnCount, setTurnCount] = useState(0);\r\n  const [attackAnim, setAttackAnim] = useState(null); // { attackerId, attackerOwner }\r\n  const [impactId, setImpactId] = useState(null); // uid or WARLORD_*\r\n  const [damageAnims, setDamageAnims] = useState([]); // [{ id, amount, owner, key }]\r\n  const [shake, setShake] = useState(false);\r\n  const [projectile, setProjectile] = useState(null); // { fromOwner, fromId, toId, ts }\r\n  const [placeSide, setPlaceSide] = useState('right'); // 'left' | 'right'\r\n\r\n  // Live refs to avoid stale reads inside timeouts\r\n  const p1Ref = useRef(p1);\r\n  const p2Ref = useRef(p2);\r\n  const turnRef = useRef(turn);\r\n  const winnerRef = useRef(winner);\r\n  useEffect(() => { p1Ref.current = p1; }, [p1]);\r\n  useEffect(() => { p2Ref.current = p2; }, [p2]);\r\n  useEffect(() => { turnRef.current = turn; }, [turn]);\r\n  useEffect(() => { winnerRef.current = winner; }, [winner]);\r\n\r\n  // Setup initial draw (guardé pour éviter un double init quand restart() est appelé)\r\n  useEffect(() => {\r\n    if (screen === 'battle' && !battleInitRef.current && p1.hand.length === 0 && p2.hand.length === 0) {\r\n      battleInitRef.current = true;\r\n      drawCards('P1', 3);\r\n      drawCards('P2', 3);\r\n      startTurn('P1');\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [screen]);\r\n\r\n  // Nettoyer timers à l'unmount ou changement d'écran\r\n  useEffect(() => {\r\n    return () => {\r\n      clearAllAiTimeouts();\r\n      if (turnTimerRef.current) {\r\n        clearTimeout(turnTimerRef.current);\r\n        turnTimerRef.current = null;\r\n      }\r\n      if (progressTickRef.current) {\r\n        clearInterval(progressTickRef.current);\r\n        progressTickRef.current = null;\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  // Central helpers for AI timers and global timers\r\n  function clearAllAiTimeouts() {\r\n    if (aiTimerRef.current) {\r\n      clearTimeout(aiTimerRef.current);\r\n      aiTimerRef.current = null;\r\n    }\r\n    if (aiTimeoutsRef.current && aiTimeoutsRef.current.length) {\r\n      aiTimeoutsRef.current.forEach(id => clearTimeout(id));\r\n      aiTimeoutsRef.current = [];\r\n    }\r\n  }\r\n\r\n  function scheduleAiTimeout(cb, delay) {\r\n    const id = setTimeout(cb, delay);\r\n    aiTimeoutsRef.current.push(id);\r\n    return id;\r\n  }\r\n\r\n  function stopAllTimers() {\r\n    // stop turn and progress timers and all AI-related timers\r\n    if (turnTimerRef.current) {\r\n      clearTimeout(turnTimerRef.current);\r\n      turnTimerRef.current = null;\r\n    }\r\n    if (progressTickRef.current) {\r\n      clearInterval(progressTickRef.current);\r\n      progressTickRef.current = null;\r\n    }\r\n    clearAllAiTimeouts();\r\n    setTurnEndsAt(null);\r\n    setTurnProgress(0);\r\n  }\r\n\r\n  function appendLog(text) {\r\n    setLog(l => [text, ...l.slice(0, 49)]);\r\n  }\r\n\r\n  function mutatePlayer(id, fn) {\r\n    if (id === 'P1') setP1(p => ({ ...p, ...fn(p) }));\r\n    else setP2(p => ({ ...p, ...fn(p) }));\r\n  }\r\n\r\n  function getPlayer(id) {\r\n    return id === 'P1' ? p1 : p2;\r\n  }\r\n  function getPlayerNow(id) {\r\n    return id === 'P1' ? p1Ref.current : p2Ref.current;\r\n  }\r\n  function getTurnNow() {\r\n    return turnRef.current;\r\n  }\r\n  function getWinnerNow() {\r\n    return winnerRef.current;\r\n  }\r\n\r\n  function opponent(id) {\r\n    return id === 'P1' ? 'P2' : 'P1';\r\n  }\r\n\r\n  function drawCards(pid, n = 1) {\r\n    const pp = getPlayer(pid);\r\n    const available = pp.deck.length;\r\n    const drawCount = Math.min(n, available);\r\n    const missing = n - drawCount;\r\n    // dégâts de fatigue croissants: 1,2,3,... par pioche manquée\r\n    const baseFatigue = pp.fatigue || 0;\r\n    let totalDmg = 0;\r\n    for (let i = 1; i <= missing; i++) totalDmg += baseFatigue + i;\r\n    mutatePlayer(pid, p => {\r\n      const deck = [...p.deck];\r\n      const drawn = deck.splice(0, drawCount);\r\n      const hand = [...p.hand, ...drawn];\r\n      const fatigue = (p.fatigue || 0) + missing;\r\n      const hp = p.hp - totalDmg;\r\n      return { deck, hand, fatigue, hp };\r\n    });\r\n    if (missing > 0) {\r\n      appendLog(`[Fatigue] ${pp.name} subit ${totalDmg} dégât(s) (pioche impossible)`);\r\n      // petite vérification de fin si la fatigue a tué le joueur\r\n      setTimeout(() => checkWinner(), 0);\r\n    }\r\n  }\r\n\r\n  function activateWarlordAbility(owner) {\r\n    // Capacité: 1 énergie → piocher 1, consomme l'action du seigneur (pas d'attaque ensuite)\r\n    if (getWinnerNow()) return;\r\n    if (getTurnNow() !== owner) return;\r\n    const p = getPlayer(owner);\r\n    if (p.warlordUsed) return;\r\n    if (p.energy < 1) { appendLog(`[Seigneur] Pas assez d'énergie.`); return; }\r\n    mutatePlayer(owner, s => ({ energy: s.energy - 1, warlordUsed: true }));\r\n    drawCards(owner, 1);\r\n    appendLog(`[Seigneur] ${p.name} utilise sa capacité: pioche 1 (coût 1)`);\r\n  }\r\n\r\n  function startTurn(pid) {\r\n    setSelectedAttacker(null);\r\n    setTurn(pid);\r\n    setTurnCount(c => c + (pid === 'P1' ? 1 : 0));\r\n    mutatePlayer(pid, p => {\r\n      const maxEnergy = Math.min(10, p.maxEnergy + 1);\r\n      const energy = maxEnergy;\r\n      // Rendre toutes les créatures aptes à attaquer au début du tour\r\n      const field = p.field.map(c => ({ ...c, canAttack: true }));\r\n      return { energy, maxEnergy, warlordUsed: false, field };\r\n    });\r\n    drawCards(pid, 1);\r\n    appendLog(`[Tour] ${getPlayer(pid).name}`);\r\n  // Timer de tour dynamique (avant le 5e round: 30s, à partir du 6e: 60s)\r\n    // clear any leftover AI actions when a new turn begins\r\n    clearAllAiTimeouts();\r\n    if (turnTimerRef.current) { clearTimeout(turnTimerRef.current); turnTimerRef.current = null; }\r\n  const nextRound = pid === 'P1' ? (turnCount + 1) : turnCount; // incrément appliqué sur P1\r\n  const delay = nextRound >= 6 ? 60000 : 30000;\r\n    const endsAt = Date.now() + delay;\r\n    setTurnEndsAt(endsAt);\r\n  appendLog(`[Timer] ${getPlayer(pid).name}: ${Math.round(delay/1000)}s`);\r\n    // Progress ticking\r\n    setTurnProgress(0);\r\n    if (progressTickRef.current) { clearInterval(progressTickRef.current); progressTickRef.current = null; }\r\n    progressTickRef.current = setInterval(() => {\r\n      setTurnProgress(prev => {\r\n        const now = Date.now();\r\n        const left = Math.max(0, endsAt - now);\r\n        const ratio = Math.min(1, 1 - left / delay);\r\n        return ratio;\r\n      });\r\n    }, 100);\r\n    turnTimerRef.current = setTimeout(() => {\r\n      if (!winner && turn === pid) {\r\n        appendLog(`[Timer] Fin automatique du tour de ${getPlayer(pid).name}`);\r\n        endTurnSafe(pid);\r\n      }\r\n    }, delay);\r\n    // IA si P2\r\n    if (pid === 'P2') {\r\n      if (aiTimerRef.current) clearTimeout(aiTimerRef.current);\r\n      aiTimerRef.current = setTimeout(() => aiPlay(), 300);\r\n      // Failsafe: si après un court délai l'IA n'a toujours aucune action, finir le tour\r\n      scheduleAiTimeout(() => {\r\n        if (getWinnerNow() || getTurnNow() !== 'P2') return;\r\n        const aiNow = getPlayerNow('P2');\r\n        const attackers = aiNow.field.filter(c => c.canAttack);\r\n        const canWarlord = !aiNow.warlordUsed && WARLORD_ATK > 0;\r\n        if (attackers.length === 0 && !canWarlord) {\r\n          appendLog(`[IA] Failsafe: fin de tour`);\r\n          endTurnSafe('P2');\r\n        }\r\n      }, 1200);\r\n    }\r\n  }\r\n\r\n  function endTurn() {\r\n    if (winner) return;\r\n    clearAllAiTimeouts();\r\n    if (turnTimerRef.current) { clearTimeout(turnTimerRef.current); turnTimerRef.current = null; }\r\n    if (progressTickRef.current) { clearInterval(progressTickRef.current); progressTickRef.current = null; }\r\n    setTurnEndsAt(null);\r\n    setTurnProgress(0);\r\n    startTurn(opponent(turn));\r\n  }\r\n\r\n  function playCard(cardUid) {\r\n    if (turn !== 'P1' || winner) return;\r\n    const player = getPlayer('P1');\r\n    const card = player.hand.find(c => c.uid === cardUid);\r\n    if (!card) return;\r\n    if (player.energy < card.cost) return;\r\n    if (player.field.length >= 8) { appendLog(`[Limite] Vous avez déjà 8 troupes en jeu.`); return; }\r\n    mutatePlayer('P1', p => {\r\n      const hand = p.hand.filter(c => c.uid !== cardUid);\r\n      const newUnit = { ...card, canAttack: !!card.charge };\r\n      const field = placeSide === 'left' ? [newUnit, ...p.field] : [...p.field, newUnit];\r\n      return { hand, field, energy: p.energy - card.cost };\r\n    });\r\n    appendLog(`[Jeu] Vous invoquez ${card.name}`);\r\n  }\r\n\r\n  function clickFieldCard(card, owner) {\r\n    if (winner) return;\r\n    if (turn !== owner) return;\r\n    if (!card.canAttack) return;\r\n    if (turn === 'P1') {\r\n      // sélectionner attaquant\r\n      if (selectedAttacker && selectedAttacker.uid === card.uid) {\r\n        setSelectedAttacker(null);\r\n      } else {\r\n        setSelectedAttacker(card);\r\n      }\r\n    }\r\n  }\r\n\r\n  // plus de bouton d'attaque direct sur le héros; attaque via onAttackWarlord/targeting\r\n  // Animation utilitaire: lance une attaque avec une courte translation visuelle\r\n  function runAttack(attackerOwner, attackerKind, attackerUid, targetKind, targetUidMaybe) {\r\n    // Guard against late-firing AI actions after turn switch or game end\r\n    if (getWinnerNow()) return;\r\n    if (getTurnNow() !== attackerOwner) return;\r\n    const attackerId = attackerKind === 'warlord' ? `WARLORD_${attackerOwner}` : attackerUid;\r\n    const targetId = targetKind === 'warlord' ? `WARLORD_${opponent(attackerOwner)}` : targetUidMaybe;\r\n  setAttackAnim({ attackerId, attackerOwner, targetId, targetKind });\r\n  // trace visuelle: projectile simple\r\n  setProjectile({ fromOwner: attackerOwner, fromId: attackerId, toId: targetId, ts: Date.now() });\r\n\r\n    // Pré-calcul des dégâts pour afficher les popups (approx selon bouclier / riposte)\r\n    const atkP = getPlayerNow(attackerOwner);\r\n    const defOwner = opponent(attackerOwner);\r\n    const defP = getPlayerNow(defOwner);\r\n    let dmgList = [];\r\n    if (attackerKind === 'creature' && targetKind === 'creature') {\r\n      const attacker = (atkP.field || []).find(c => c.uid === attackerUid);\r\n      const defender = (defP.field || []).find(c => c.uid === targetUidMaybe);\r\n      if (attacker && defender) {\r\n        const aToD = defender.shield ? 0 : attacker.atk;\r\n        const dToA = attacker.shield ? 0 : defender.atk;\r\n        if (aToD > 0) dmgList.push({ id: defender.uid, amount: aToD, owner: defOwner });\r\n        if (dToA > 0) dmgList.push({ id: attacker.uid, amount: dToA, owner: attackerOwner });\r\n      }\r\n    } else if (attackerKind === 'creature' && targetKind === 'warlord') {\r\n      const attacker = (atkP.field || []).find(c => c.uid === attackerUid);\r\n      if (attacker) {\r\n        const toHero = attacker.atk;\r\n        const riposte = attacker.shield ? 0 : WARLORD_ATK;\r\n        if (toHero > 0) dmgList.push({ id: `WARLORD_${defOwner}`, amount: toHero, owner: defOwner });\r\n        if (riposte > 0) dmgList.push({ id: attacker.uid, amount: riposte, owner: attackerOwner });\r\n      }\r\n    } else if (attackerKind === 'warlord' && targetKind === 'creature') {\r\n      const defender = (defP.field || []).find(c => c.uid === targetUidMaybe);\r\n      if (defender) {\r\n        const toDef = defender.shield ? 0 : WARLORD_ATK;\r\n        const riposte = defender.atk;\r\n        if (toDef > 0) dmgList.push({ id: defender.uid, amount: toDef, owner: defOwner });\r\n        if (riposte > 0) dmgList.push({ id: `WARLORD_${attackerOwner}`, amount: riposte, owner: attackerOwner });\r\n      }\r\n    } else if (attackerKind === 'warlord' && targetKind === 'warlord') {\r\n      if (WARLORD_ATK > 0) {\r\n        dmgList.push({ id: `WARLORD_${defOwner}`, amount: WARLORD_ATK, owner: defOwner });\r\n        dmgList.push({ id: `WARLORD_${attackerOwner}`, amount: WARLORD_ATK, owner: attackerOwner });\r\n      }\r\n    }\r\n\r\n    // appliquer les dégâts après un court délai pour laisser l'anim se voir\r\n    let keysList = [];\r\n    setTimeout(() => {\r\n      if (getWinnerNow() || getTurnNow() !== attackerOwner) return; // re-check before applying effects\r\n      // Impact flash + dégâts flottants\r\n      if (targetId) setImpactId(targetId);\r\n      if (dmgList.length) {\r\n        keysList = dmgList.map((d, i) => ({ ...d, key: `${Date.now()}_${i}` }));\r\n        setDamageAnims(prev => [...prev, ...keysList].slice(-12));\r\n        if (keysList.some(d => d.amount >= 4)) {\r\n          setShake(true);\r\n          setTimeout(() => setShake(false), 120);\r\n        }\r\n      }\r\n      if (attackerKind === 'warlord' && targetKind === 'warlord') {\r\n        doWarlordAttackVsPlayer(attackerOwner);\r\n      } else if (attackerKind === 'warlord' && targetKind === 'creature') {\r\n        doWarlordAttackVsCreature(attackerOwner, targetUidMaybe);\r\n      } else if (attackerKind === 'creature' && targetKind === 'warlord') {\r\n        doAttackCreatureVsPlayer(attackerOwner, attackerUid);\r\n      } else {\r\n        doAttackCreatureVsCreature(attackerOwner, attackerUid, targetUidMaybe);\r\n      }\r\n      // clear impact after short delay\r\n      setTimeout(() => setImpactId(null), 260);\r\n      // clear damage popups later\r\n      const toClear = keysList.map(k => k.key);\r\n      setTimeout(() => setDamageAnims(prev => prev.filter(x => !toClear.includes(x.key))), 700);\r\n    }, 180);\r\n    // retour visuel\r\n    setTimeout(() => setAttackAnim(null), 600);\r\n    setTimeout(() => setProjectile(null), 320);\r\n  }\r\n\r\n  function doAttackCreatureVsPlayer(attackerOwner, attackerUid) {\r\n    const defOwner = opponent(attackerOwner);\r\n    const atkP = getPlayer(attackerOwner);\r\n    const defP = getPlayer(defOwner);\r\n    const creature = atkP.field.find(c => c.uid === attackerUid);\r\n    if (!creature || !creature.canAttack) return;\r\n    const dmg = creature.atk;\r\n    const prevHp = defP.hp;\r\n    const inflicted = Math.max(0, Math.min(dmg, prevHp));\r\n    // appliquer les dégâts au Seigneur (héros)\r\n    mutatePlayer(defOwner, p => ({ hp: p.hp - dmg }));\r\n    // riposte du Seigneur: inflige WARLORD_ATK au chercheur (consomme son bouclier si présent)\r\n    mutatePlayer(attackerOwner, p => {\r\n      const healed = creature.lifesteal ? inflicted : 0;\r\n      const field = p.field\r\n        .map(c => {\r\n          if (c.uid !== attackerUid) return c;\r\n          const consumedShield = WARLORD_ATK > 0 && c.shield;\r\n          const newShield = consumedShield ? false : c.shield;\r\n          const taken = c.shield ? 0 : WARLORD_ATK;\r\n          const newHp = c.hp - taken;\r\n          return { ...c, canAttack: false, shield: newShield, hp: newHp };\r\n        })\r\n        .filter(c => c.hp > 0);\r\n      return { hp: p.hp + healed, field };\r\n    });\r\n    appendLog(`[Attaque] ${atkP.name} (${creature.name}) inflige ${dmg} à ${defP.name}`);\r\n    if (WARLORD_ATK > 0) appendLog(`[Seigneur] Riposte et inflige ${WARLORD_ATK} à l'attaquant`);\r\n    checkWinner();\r\n  }\r\n\r\n  function doWarlordAttackVsPlayer(attackerOwner) {\r\n    const defOwner = opponent(attackerOwner);\r\n    const atkP = getPlayer(attackerOwner);\r\n    const defP = getPlayer(defOwner);\r\n    if (atkP.warlordUsed || turn !== attackerOwner) return;\r\n    // dégâts sur le héros adverse\r\n    mutatePlayer(defOwner, p => ({ hp: p.hp - WARLORD_ATK }));\r\n    // riposte symétrique du seigneur adverse\r\n    mutatePlayer(attackerOwner, p => ({ hp: p.hp - WARLORD_ATK }));\r\n    // marquer l'utilisation de l'attaque du seigneur\r\n    mutatePlayer(attackerOwner, p => ({ warlordUsed: true }));\r\n    appendLog(`[Seigneur] ${atkP.name} attaque ${defP.name} pour ${WARLORD_ATK} (riposte ${WARLORD_ATK})`);\r\n    checkWinner();\r\n  }\r\n\r\n  function doWarlordAttackVsCreature(attackerOwner, defenderUid) {\r\n    const defOwner = opponent(attackerOwner);\r\n    const atkP = getPlayer(attackerOwner);\r\n    const defP = getPlayer(defOwner);\r\n    if (atkP.warlordUsed || turn !== attackerOwner) return;\r\n    const defender = defP.field.find(c => c.uid === defenderUid);\r\n    if (!defender) return;\r\n    const aDmg = WARLORD_ATK;\r\n    const dDmg = defender.atk;\r\n    // appliquer dégâts au défenseur (respect bouclier)\r\n    mutatePlayer(defOwner, p => ({\r\n      field: p.field\r\n        .map(c => {\r\n          if (c.uid !== defenderUid) return c;\r\n          const newShield = c.shield && aDmg > 0 ? false : c.shield;\r\n          const taken = c.shield ? 0 : aDmg;\r\n          return { ...c, hp: c.hp - taken, shield: newShield };\r\n        })\r\n        .filter(c => c.hp > 0),\r\n    }));\r\n    // riposte de la créature: dégâts au héros attaquant\r\n    mutatePlayer(attackerOwner, p => ({ hp: p.hp - dDmg, warlordUsed: true }));\r\n    appendLog(`[Seigneur] ${atkP.name} frappe une créature (${aDmg}) et subit ${dDmg} en riposte`);\r\n    checkWinner();\r\n  }\r\n\r\n  function doAttackCreatureVsCreature(attackerOwner, attackerUid, defenderUid) {\r\n    const defOwner = opponent(attackerOwner);\r\n    const atkP = getPlayer(attackerOwner);\r\n    const defP = getPlayer(defOwner);\r\n    const attacker = atkP.field.find(c => c.uid === attackerUid);\r\n    const defender = defP.field.find(c => c.uid === defenderUid);\r\n    if (!attacker || !defender || !attacker.canAttack) return;\r\n  const aDmg = attacker.atk;\r\n  const dDmg = defender.atk;\r\n  // gestion des boucliers (shield)\r\n  const defenderTook = defender.shield ? 0 : aDmg;\r\n\r\n    mutatePlayer(attackerOwner, p => {\r\n      const field = p.field\r\n        .map(c => {\r\n          if (c.uid !== attackerUid) return c;\r\n          const consumedShield = dDmg > 0 && c.shield;\r\n          const newShield = consumedShield ? false : c.shield;\r\n          const newHp = c.hp - (c.shield ? 0 : dDmg);\r\n          return { ...c, hp: newHp, canAttack: false, shield: newShield };\r\n        })\r\n        .filter(c => c.hp > 0);\r\n      const heal = attacker.lifesteal ? defenderTook : 0;\r\n      return { field, hp: p.hp + heal };\r\n    });\r\n\r\n    mutatePlayer(defOwner, p => ({\r\n      field: p.field\r\n        .map(c => {\r\n          if (c.uid !== defenderUid) return c;\r\n          const consumedShield = aDmg > 0 && c.shield;\r\n          const newShield = consumedShield ? false : c.shield;\r\n          const newHp = c.hp - (c.shield ? 0 : aDmg);\r\n          return { ...c, hp: newHp, shield: newShield };\r\n        })\r\n        .filter(c => c.hp > 0),\r\n    }));\r\n    appendLog(`[Combat] ${attacker.name} (${aDmg}) ↔ ${defender.name} (${dDmg})`);\r\n    checkWinner();\r\n  }\r\n\r\n  function checkWinner() {\r\n    const p1hp = p1.hp;\r\n    const p2hp = p2.hp;\r\n    if (p1hp <= 0 && p2hp <= 0) {\r\n      setWinner('Égalité');\r\n      stopAllTimers();\r\n    } else if (p1hp <= 0) {\r\n      setWinner(p2.name);\r\n      stopAllTimers();\r\n    } else if (p2hp <= 0) {\r\n      setWinner(p1.name);\r\n      stopAllTimers();\r\n    }\r\n  }\r\n\r\n  // (remplacé par logique dans startTurn)\r\n\r\n  // IA simple (v1): jouer une carte coût==énergie puis attaquer la plus forte, sinon le seigneur\r\n  function aiPlay() {\r\n    if (getWinnerNow()) return;\r\n    const ai = getPlayerNow('P2');\r\n    appendLog(`[IA] Réflexion…`);\r\n    // Essayer d'utiliser la capacité du seigneur si main faible et assez d'énergie\r\n    if (!ai.warlordUsed && ai.energy >= 1 && ai.hand.length <= 4) {\r\n      activateWarlordAbility('P2');\r\n    }\r\n    // 1) Jouer plusieurs cartes: choisit un ensemble de cartes qui maximise une valeur simple sous contrainte d'énergie\r\n    const scoreCard = (c) => c.atk * 2 + c.hp + (c.taunt ? 2 : 0) + (c.shield ? 1.5 : 0) + (c.charge ? 1 : 0) + (c.lifesteal ? 1.5 : 0);\r\n    let energyLeft = ai.energy;\r\n    let virtualHand = [...ai.hand];\r\n    const toPlay = [];\r\n    // glouton: à chaque étape, choisit la meilleure carte jouable selon score\r\n    while (true) {\r\n      const slotsLeft = Math.max(0, 8 - getPlayerNow('P2').field.length - toPlay.length);\r\n      if (slotsLeft <= 0) break;\r\n      const energyCap = energyLeft; // capture for eslint/no-loop-func\r\n      const affordable = virtualHand.filter(c => c.cost <= energyCap);\r\n      if (!affordable.length) break;\r\n      affordable.sort((a,b) => scoreCard(b) - scoreCard(a) || b.cost - a.cost);\r\n      const pick = affordable[0];\r\n      toPlay.push(pick);\r\n      energyLeft -= pick.cost;\r\n      virtualHand = virtualHand.filter(c => c.uid !== pick.uid);\r\n      // borne de sécurité\r\n      if (toPlay.length > 10) break;\r\n    }\r\n    if (toPlay.length) {\r\n      mutatePlayer('P2', p => {\r\n        const hand = p.hand.filter(h => !toPlay.find(tp => tp.uid === h.uid));\r\n        const slotsLeft = Math.max(0, 8 - p.field.length);\r\n        const batch = toPlay.slice(0, slotsLeft).map(c => ({ ...c, canAttack: !!c.charge }));\r\n        const field = [...p.field, ...batch];\r\n        const energy = p.energy - batch.reduce((s, c) => s + c.cost, 0);\r\n        return { hand, field, energy };\r\n      });\r\n      toPlay.forEach(c => appendLog(`[IA] Invoque ${c.name}`));\r\n      // petite pause pour poser les cartes\r\n      scheduleAiTimeout(() => {}, 200);\r\n    }\r\n\r\n    // Si après pose, aucune attaque possible (pas d'attaquants et pas de seigneur), finir tout de suite\r\n  const predictedAttackers = ai.field.filter(c => c.canAttack).length + toPlay.filter(c => c.charge).length;\r\n    const canWarlordPred = !ai.warlordUsed && WARLORD_ATK > 0;\r\n    if (predictedAttackers === 0 && !canWarlordPred) {\r\n      if (!getWinnerNow() && getTurnNow() === 'P2') {\r\n        appendLog(`[IA] Fin de tour (aucune action)`);\r\n        endTurnSafe('P2');\r\n        return;\r\n      }\r\n    }\r\n\r\n    // Ne décide de finir que dans le bloc d'actions (état à jour)\r\n\r\n    // 2) attaquer avec chaque créature: cible = carte ennemie la plus forte, sinon seigneur\r\n    scheduleAiTimeout(() => {\r\n      if (getWinnerNow() || getTurnNow() !== 'P2') {\r\n        appendLog(`[IA] Annulé: tour=${getTurnNow()} winner=${!!getWinnerNow()}`);\r\n        return; // tour déjà passé ou partie terminée\r\n      }\r\n      const actions = [];\r\n      const ai2 = getPlayerNow('P2');\r\n      const attackers = ai2.field.filter(c => c.canAttack);\r\n      appendLog(`[IA] Prépare ${attackers.length} attaquant(s)`);\r\n      if (attackers.length === 0 && (ai2.warlordUsed || WARLORD_ATK <= 0)) {\r\n        appendLog(`[IA] Aucune attaque possible.`);\r\n      }\r\n      // helpers pour évaluer les échanges en tenant compte des boucliers\r\n      const effectiveDefDamage = (def, atkCard) => (atkCard.shield ? 0 : def.atk);\r\n      for (const c of attackers) {\r\n        const enemyFieldNow = getPlayerNow('P1').field;\r\n        const tauntsNow = enemyFieldNow.filter(x => x.taunt);\r\n        const poolNow = tauntsNow.length ? tauntsNow : enemyFieldNow;\r\n        if (poolNow.length) {\r\n          const killable = poolNow.filter(t => !t.shield && c.atk >= t.hp);\r\n          // parmi killable, préférer ceux qui ne tuent pas l'attaquant en riposte\r\n          const surviveKill = killable.filter(t => c.hp - effectiveDefDamage(t, c) > 0);\r\n          let target;\r\n          if (surviveKill.length) {\r\n            target = [...surviveKill].sort((a,b) => b.atk - a.atk)[0];\r\n          } else if (killable.length) {\r\n            target = [...killable].sort((a,b) => b.atk - a.atk)[0];\r\n          } else {\r\n            // sinon, la plus grosse menace\r\n            target = [...poolNow].sort((a,b) => b.atk - a.atk)[0];\r\n          }\r\n          actions.push(['P2','creature', c.uid, 'creature', target.uid]);\r\n        } else {\r\n          actions.push(['P2','creature', c.uid, 'warlord']);\r\n        }\r\n      }\r\n\r\n      if (!getWinnerNow() && getTurnNow() === 'P2' && !getPlayerNow('P2').warlordUsed && WARLORD_ATK > 0) {\r\n        const enemyFieldLatest = getPlayerNow('P1').field;\r\n        const tauntsL = enemyFieldLatest.filter(x => x.taunt);\r\n        const poolL = tauntsL.length ? tauntsL : enemyFieldLatest;\r\n        if (poolL.length) {\r\n          // cible la créature la plus dangereuse (ou tuable) en priorité\r\n          const killablesL = poolL.filter(t => !t.shield && WARLORD_ATK >= t.hp);\r\n          const targetL = (killablesL.length\r\n            ? [...killablesL].sort((a,b) => b.atk - a.atk)[0]\r\n            : [...poolL].sort((a,b) => b.atk - a.atk)[0]);\r\n          actions.push(['P2','warlord','WARLORD_P2','creature', targetL.uid]);\r\n        } else {\r\n          actions.push(['P2','warlord','WARLORD_P2','warlord']);\r\n        }\r\n      }\r\n\r\n      const per = 350;\r\n      actions.forEach((a,i) => scheduleAiTimeout(() => runAttack(...a), i*per));\r\n      const total = actions.length * per + 450;\r\n      appendLog(`[IA] ${actions.length} action(s) d'attaque.`);\r\n      if (actions.length === 0) {\r\n        // rien à faire de plus -> fin de tour immédiate\r\n        if (!getWinnerNow() && getTurnNow() === 'P2') {\r\n          appendLog(`[IA] Fin de tour (aucune action)`);\r\n          endTurnSafe('P2');\r\n        }\r\n      } else {\r\n        scheduleAiTimeout(() => {\r\n          if (!getWinnerNow() && getTurnNow() === 'P2') {\r\n            endTurnSafe('P2');\r\n          }\r\n        }, total);\r\n      }\r\n    }, 200);\r\n  }\r\n\r\n  function endTurnSafe(expectedTurn) {\r\n    if (getWinnerNow()) return;\r\n    const curr = getTurnNow();\r\n    if (curr !== expectedTurn) return;\r\n    appendLog(`[Tour] Fin ${expectedTurn} → ${opponent(expectedTurn)}`);\r\n    clearAllAiTimeouts();\r\n    if (turnTimerRef.current) { clearTimeout(turnTimerRef.current); turnTimerRef.current = null; }\r\n    if (progressTickRef.current) { clearInterval(progressTickRef.current); progressTickRef.current = null; }\r\n    setTurnEndsAt(null);\r\n    setTurnProgress(0);\r\n    startTurn(opponent(expectedTurn));\r\n  }\r\n\r\n  function restart() {\r\n    // stop any ongoing timers before resetting state\r\n    stopAllTimers();\r\n    setP1({\r\n      name: 'Vous',\r\n      hp: 20,\r\n      deck: makeDeck('P1'),\r\n      hand: [],\r\n      field: [],\r\n      energy: 0,\r\n      maxEnergy: 0,\r\n      fatigue: 0,\r\n      warlordUsed: false,\r\n      warlordName: 'Seigneur',\r\n    });\r\n    setP2({\r\n      name: 'IA',\r\n      hp: 20,\r\n      deck: makeDeck('P2'),\r\n      hand: [],\r\n      field: [],\r\n      energy: 0,\r\n      maxEnergy: 0,\r\n      fatigue: 0,\r\n      warlordUsed: false,\r\n      warlordName: 'Seigneur IA',\r\n    });\r\n    setSelectedAttacker(null);\r\n  setImpactId(null);\r\n  setDamageAnims([]);\r\n  setShake(false);\r\n    setWinner(null);\r\n    setLog([]);\r\n    setTurn('P1');\r\n    setTurnCount(0);\r\n    setTimeout(() => {\r\n      drawCards('P1', 3);\r\n      drawCards('P2', 3);\r\n      startTurn('P1');\r\n    }, 100);\r\n  }\r\n\r\n  const you = p1;\r\n  const enemy = p2;\r\n\r\n  // Barre de navigation\r\n  const Nav = () => (\r\n    <div style={{ display:'flex', gap:8, flexWrap:'wrap', borderTop:'1px solid var(--line)', paddingTop:8, marginTop:12 }}>\r\n      <button className={`week-btn ${screen==='deck'?'primary':''}`} onClick={() => setScreen('deck')}>Créez son deck</button>\r\n      <button className={`week-btn ${screen==='shop'?'primary':''}`} onClick={() => setScreen('shop')}>Boutique (dev)</button>\r\n      <button className={`week-btn ${screen==='home'?'primary':''}`} onClick={() => setScreen('home')}>Home</button>\r\n      <button className={`week-btn ${screen==='event'?'primary':''}`} onClick={() => setScreen('event')}>Event (dev)</button>\r\n      <button className={`week-btn ${screen==='clan'?'primary':''}`} onClick={() => setScreen('clan')}>Clan (dev)</button>\r\n    </div>\r\n  );\r\n\r\n  if (screen !== 'battle') {\r\n    return (\r\n      <div className=\"card\">\r\n        <div style={{ padding: 12 }}>\r\n          {/* Inline styles for damage float and shake (can be moved to CSS file) */}\r\n          <style>{`\r\n            @keyframes cg-float { from { transform: translate(-50%, 0); opacity: 1; } to { transform: translate(-50%, -18px); opacity: 0; } }\r\n            .cg-arena.shake { animation: cg-shake 120ms ease; }\r\n            @keyframes cg-shake { 0% { transform: translateX(0); } 25% { transform: translateX(-2px); } 50% { transform: translateX(2px); } 75% { transform: translateX(-2px); } 100% { transform: translateX(0); } }\r\n          `}</style>\r\n          <h2 style={{ marginTop: 0 }}>Jeu de cartes</h2>\r\n          <p style={{ color:'var(--muted)', marginTop:-6 }}>Un prototype rapide de combat au tour par tour.</p>\r\n          <div style={{ marginTop: 12 }}>\r\n            <button\r\n              className=\"week-btn primary\"\r\n              onClick={() => {\r\n                // reset partie et lancer combat IA\r\n                if (aiTimerRef.current) {\r\n                  clearTimeout(aiTimerRef.current);\r\n                  aiTimerRef.current = null;\r\n                }\r\n                battleInitRef.current = true; // éviter double init via useEffect\r\n                setScreen('battle');\r\n                // restart() lance une nouvelle partie et démarre le tour P1 automatiquement\r\n                restart();\r\n              }}\r\n            >\r\n              Lancez un combat (IA)\r\n            </button>\r\n          </div>\r\n\r\n          <Nav />\r\n\r\n          {/* Contenus des onglets simples */}\r\n          {screen==='deck' && (\r\n            <div className=\"card\" style={{ marginTop:12 }}>\r\n              <h3 style={{ marginTop:0 }}>Création de deck</h3>\r\n              <p style={{ color:'var(--muted)' }}>À venir: éditeur pour composer votre deck personnalisé.</p>\r\n            </div>\r\n          )}\r\n          {screen==='shop' && (\r\n            <div className=\"card\" style={{ marginTop:12 }}>\r\n              <h3 style={{ marginTop:0 }}>Boutique (dev)</h3>\r\n              <p style={{ color:'var(--muted)' }}>Prototype: packs de cartes, cosmétiques, etc.</p>\r\n            </div>\r\n          )}\r\n          {screen==='event' && (\r\n            <div className=\"card\" style={{ marginTop:12 }}>\r\n              <h3 style={{ marginTop:0 }}>Événements (dev)</h3>\r\n              <p style={{ color:'var(--muted)' }}>Saisons, défis hebdo, classements…</p>\r\n            </div>\r\n          )}\r\n          {screen==='clan' && (\r\n            <div className=\"card\" style={{ marginTop:12 }}>\r\n              <h3 style={{ marginTop:0 }}>Clans (dev)</h3>\r\n              <p style={{ color:'var(--muted)' }}>Rejoignez un clan, missions et bonus coop.</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"cardgame-root\">\r\n      {/* Inline styles present in both views to ensure availability */}\r\n      <style>{`\r\n        @keyframes cg-float { from { transform: translate(-50%, 0); opacity: 1; } to { transform: translate(-50%, -18px); opacity: 0; } }\r\n        .cg-arena.shake { animation: cg-shake 120ms ease; }\r\n        @keyframes cg-shake { 0% { transform: translateX(0); } 25% { transform: translateX(-2px); } 50% { transform: translateX(2px); } 75% { transform: translateX(-2px); } 100% { transform: translateX(0); } }\r\n        /* Ability overlays */\r\n        @keyframes fx-pulse { 0% { opacity: 0.35; } 50% { opacity: 0.9; } 100% { opacity: 0.35; } }\r\n        @keyframes fx-shimmer { 0% { background-position: 0% 50%; } 100% { background-position: 200% 50%; } }\r\n        .fx-taunt { position:absolute; inset:-2px; border:2px solid rgba(255,165,0,0.85); border-radius:8px; box-shadow: 0 0 10px rgba(255,165,0,0.6); animation: fx-pulse 1.2s infinite ease-in-out; pointer-events:none; }\r\n        .fx-shield { position:absolute; inset:-2px; border-radius:8px; border:2px solid rgba(41,128,185,0.9); box-shadow: 0 0 10px rgba(41,128,185,0.6); overflow:hidden; pointer-events:none; }\r\n        .fx-shield::after { content:''; position:absolute; inset:-2px; background: linear-gradient(90deg, rgba(255,255,255,0), rgba(41,128,185,0.25), rgba(255,255,255,0)); background-size: 200% 100%; animation: fx-shimmer 1.2s linear infinite; }\r\n        .fx-charge { position:absolute; inset:-2px; border-radius:8px; box-shadow: inset 0 0 10px rgba(231,76,60,0.6); animation: fx-pulse 0.9s infinite ease-in-out; pointer-events:none; }\r\n        .fx-life { position:absolute; bottom:-2px; left:-2px; right:-2px; height:4px; border-radius:0 0 8px 8px; background: rgba(46,204,113,0.9); animation: fx-pulse 1.5s infinite ease-in-out; pointer-events:none; }\r\n      `}</style>\r\n      <div className=\"cg-top\">\r\n        <PlayerBoard\r\n          player={enemy}\r\n          isSelf={false}\r\n          turn={turn}\r\n          onCardClick={() => {}}\r\n          selectable={false}\r\n          highlightAttacker={null}\r\n        />\r\n      </div>\r\n\r\n      <Arena\r\n        p1Field={you.field}\r\n        p2Field={enemy.field}\r\n        p1Hp={you.hp}\r\n        p2Hp={enemy.hp}\r\n        p1WarlordUsed={you.warlordUsed}\r\n        attackAnim={attackAnim}\r\n        impactId={impactId}\r\n        damageAnims={damageAnims}\r\n        shake={shake}\r\n        projectile={projectile}\r\n        turn={turn}\r\n        selectedAttacker={selectedAttacker}\r\n        onSelectAttacker={(card) => clickFieldCard(card, 'P1')}\r\n        onSelectWarlord={() => {\r\n          if (turn !== 'P1' || you.warlordUsed) return;\r\n          if (selectedAttacker?.isWarlord) setSelectedAttacker(null);\r\n          else setSelectedAttacker({ uid: 'WARLORD_P1', isWarlord: true, atk: WARLORD_ATK, canAttack: true });\r\n        }}\r\n        onWarlordAbility={() => activateWarlordAbility('P1')}\r\n        onAttackCard={(defUid) => {\r\n          if (!selectedAttacker) return;\r\n          // Règle de Provocation: si une provocation est en face, il faut la cibler\r\n          const enemyHasTaunt = enemy.field.some(c => c.taunt);\r\n          const target = enemy.field.find(c => c.uid === defUid);\r\n          if (enemyHasTaunt && target && !target.taunt) {\r\n            appendLog(`[Règle] Vous devez cibler une créature avec Provocation.`);\r\n            return;\r\n          }\r\n          if (selectedAttacker.isWarlord) runAttack('P1','warlord','WARLORD_P1','creature', defUid);\r\n          else runAttack('P1','creature', selectedAttacker.uid,'creature', defUid);\r\n          setSelectedAttacker(null);\r\n        }}\r\n        onAttackWarlord={() => {\r\n          if (!selectedAttacker) return;\r\n          const enemyHasTaunt = enemy.field.some(c => c.taunt);\r\n          if (enemyHasTaunt) { appendLog(`[Règle] Une Provocation bloque le Seigneur.`); return; }\r\n          if (selectedAttacker.isWarlord) runAttack('P1','warlord','WARLORD_P1','warlord');\r\n          else runAttack('P1','creature', selectedAttacker.uid,'warlord');\r\n          setSelectedAttacker(null);\r\n        }}\r\n      />\r\n\r\n      <div className=\"cg-hand-area\">\r\n        <PlayerBoard\r\n          player={you}\r\n          isSelf\r\n          turn={turn}\r\n          onCardClick={playCard}\r\n          selectable\r\n          highlightAttacker={selectedAttacker?.uid}\r\n          onAttackPlayer={() => {}}\r\n        />\r\n        {/* Choix du côté d'invocation */}\r\n        <div style={{ marginTop:8, display:'flex', gap:8, alignItems:'center' }}>\r\n          <span style={{ fontSize:12, color:'var(--muted)' }}>Placement:</span>\r\n          <button className={`week-btn ${placeSide==='left'?'primary':''}`} onClick={() => setPlaceSide('left')}>Gauche</button>\r\n          <button className={`week-btn ${placeSide==='right'?'primary':''}`} onClick={() => setPlaceSide('right')}>Droite</button>\r\n          <span style={{ fontSize:12, color:'var(--muted)' }}>Limite: {you.field.length}/8</span>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"cg-sidebar\">\r\n        <div className=\"cg-panel\">\r\n          <h3 style={{ margin: '0 0 6px' }}>Statut</h3>\r\n          <div>Tour: {turn === 'P1' ? 'Vous' : 'IA'} (#{turnCount})</div>\r\n          <div>Votre PV: {you.hp}</div>\r\n          <div>IA PV: {enemy.hp}</div>\r\n          <div>Énergie: {you.energy}/{you.maxEnergy}</div>\r\n          <div>Deck: {you.deck.length}</div>\r\n          <div>IA Deck: {enemy.deck.length}</div>\r\n          <div style={{ marginTop: 8, display:'flex', gap:10, alignItems:'center' }}>\r\n            {/* Bouton Fin de tour avec anneau de progression */}\r\n            <div\r\n              style={{ position:'relative', width:64, height:64, flex:'0 0 auto' }}\r\n              title={turnEndsAt ? `${Math.max(0, Math.ceil((turnEndsAt - Date.now())/1000))}s restantes` : ''}\r\n            >\r\n              <div style={{\r\n                position:'absolute', inset:0, borderRadius:'50%',\r\n                background:`conic-gradient(var(--accent) ${Math.round((turnProgress||0)*360)}deg, rgba(0,0,0,0.1) 0deg)`\r\n              }} />\r\n              <div style={{ position:'absolute', inset:6, borderRadius:'50%', background:'var(--card)' }} />\r\n              <button\r\n                className=\"week-btn\"\r\n                disabled={winner || turn !== 'P1'}\r\n                onClick={endTurn}\r\n                style={{ position:'absolute', inset:12, borderRadius:'50%', width:'auto', height:'auto', padding:'6px 8px' }}\r\n              >\r\n                Fin\r\n              </button>\r\n              {/* Count-down texte */}\r\n              {turnEndsAt && (\r\n                <div style={{ position:'absolute', inset:0, display:'flex', alignItems:'center', justifyContent:'center', pointerEvents:'none', fontSize:12, fontWeight:600, color:'var(--muted)' }}>\r\n                  {Math.max(0, Math.ceil((turnEndsAt - Date.now())/1000))}s\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div style={{ fontSize:12, color:'var(--muted)' }}>\r\n              {turn === 'P1' ? 'Votre tour' : 'Tour IA'}\r\n            </div>\r\n            <button className=\"week-btn\" onClick={restart}>Rejouer</button>\r\n          </div>\r\n          {winner && <div style={{ marginTop: 8, fontWeight: 600 }}>Victoire: {winner}</div>}\r\n        </div>\r\n        <div className=\"cg-panel\">\r\n          <h4 style={{ margin: '0 0 6px' }}>Capacités</h4>\r\n          <ul style={{ paddingLeft: 16, margin: 0, fontSize: 12, lineHeight: 1.5 }}>\r\n            <li><strong>Provocation</strong>: doit être attaquée en priorité. Empêche d'attaquer le héros.</li>\r\n            <li><strong>Charge</strong>: peut attaquer le tour où elle est invoquée.</li>\r\n            <li><strong>Bouclier</strong>: ignore la prochaine source de dégâts reçus.</li>\r\n            <li><strong>Vol de vie</strong>: soigne votre héros à hauteur des dégâts infligés.</li>\r\n            <li><strong>Fatigue</strong>: piocher sans cartes inflige des dégâts croissants.</li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"cg-panel\" style={{ maxHeight: 240, overflowY:'auto' }}>\r\n          <h4 style={{ margin: '0 0 6px' }}>Journal</h4>\r\n          <ul style={{ listStyle:'none', padding:0, margin:0, fontSize:12 }}>\r\n            {log.map((l,i) => <li key={i} style={{ marginBottom:2 }}>{l}</li>)}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      {/* Nav masquée pendant le combat */}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction PlayerBoard({ player, isSelf, onCardClick, selectable, highlightAttacker, onAttackPlayer }) {\r\n  const cardStyle = (c) => {\r\n    // Glow based on abilities\r\n    let boxShadow = '0 1px 3px rgba(0,0,0,0.25)';\r\n    if (c.taunt) boxShadow += ', 0 0 8px rgba(255,165,0,0.45)'; // orange\r\n    if (c.shield) boxShadow += ', 0 0 8px rgba(52,152,219,0.45)'; // blue\r\n    if (c.lifesteal) boxShadow += ', 0 0 8px rgba(46,204,113,0.45)'; // green\r\n    if (c.charge) boxShadow += ', 0 0 8px rgba(231,76,60,0.45)'; // red\r\n    return { boxShadow, transition:'transform 120ms ease, box-shadow 200ms ease' };\r\n  };\r\n  return (\r\n    <div className={`cg-player ${isSelf ? 'self' : 'opp'}`}>\r\n      <div className=\"cg-player-header\">\r\n        <strong>{player.name}</strong> — PV {player.hp} — Énergie {player.energy}/{player.maxEnergy}\r\n      </div>\r\n      <div className=\"cg-hand\">\r\n        {player.hand.map(c => (\r\n          <div\r\n            key={c.uid}\r\n            className=\"cg-card small\"\r\n            title={`${c.name}\\nCoût:${c.cost} ATK:${c.atk} PV:${c.hp}`}\r\n            onClick={() => selectable && isSelf && onCardClick(c.uid)}\r\n            style={cardStyle(c)}\r\n          >\r\n            <div className=\"cg-cost\">{c.cost}</div>\r\n            <div className=\"cg-name\">{c.name}</div>\r\n            <div style={{ fontSize:9, color:'var(--muted)' }}>{(c.categories||[]).join('/')}</div>\r\n            {c.effect && <div style={{ fontSize:10, color:'var(--accent)' }}>{c.effect}</div>}\r\n            <div style={{ display:'flex', gap:4, flexWrap:'wrap', fontSize:10, marginTop:2 }}>\r\n              {c.taunt && <span style={{ padding:'0 4px', border:'1px solid #999', borderRadius:3 }}>Prov</span>}\r\n              {c.charge && <span style={{ padding:'0 4px', border:'1px solid #999', borderRadius:3 }}>Charge</span>}\r\n              {c.shield && <span style={{ padding:'0 4px', border:'1px solid #999', borderRadius:3 }}>Bouclier</span>}\r\n              {c.lifesteal && <span style={{ padding:'0 4px', border:'1px solid #999', borderRadius:3 }}>Vol</span>}\r\n            </div>\r\n            <div className=\"cg-stats\">{c.atk}/{c.hp}</div>\r\n          </div>\r\n        ))}\r\n        {!player.hand.length && <div style={{ color:'var(--muted)', fontSize:12 }}>Main vide</div>}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Arena({ p1Field, p2Field, p1Hp, p2Hp, p1WarlordUsed, selectedAttacker, onSelectAttacker, onSelectWarlord, onAttackCard, onAttackWarlord, onWarlordAbility, turn, attackAnim, impactId, damageAnims, shake, projectile }) {\r\n  const cardStyle = (c) => {\r\n    let boxShadow = '0 1px 3px rgba(0,0,0,0.25)';\r\n    if (c.taunt) boxShadow += ', 0 0 8px rgba(255,165,0,0.45)';\r\n    if (c.shield) boxShadow += ', 0 0 8px rgba(52,152,219,0.45)';\r\n    if (c.lifesteal) boxShadow += ', 0 0 8px rgba(46,204,113,0.45)';\r\n    if (c.charge) boxShadow += ', 0 0 8px rgba(231,76,60,0.45)';\r\n    return { boxShadow, transition:'transform 160ms ease, box-shadow 200ms ease' };\r\n  };\r\n  return (\r\n    <div className={`cg-arena${shake ? ' shake' : ''}`}>\r\n      {/* projectile simple */}\r\n      {projectile && (\r\n        <AimLine fromId={projectile.fromId} toId={projectile.toId} />\r\n      )}\r\n      <div className=\"cg-row opp\">\r\n        {p2Field.map(c => (\r\n          <div\r\n            key={c.uid}\r\n            className=\"cg-card\"\r\n            title={`${c.name}\\nATK:${c.atk} PV:${c.hp}`}\r\n            onClick={() => selectedAttacker && onAttackCard(c.uid)}\r\n            style={{\r\n              ...cardStyle(c),\r\n              transform: attackAnim && attackAnim.attackerId === c.uid && attackAnim.attackerOwner==='P2' ? 'translateY(18px)' : undefined,\r\n              position:'relative'\r\n            }}\r\n            data-cg-id={c.uid}\r\n          >\r\n            <div className=\"cg-name\">{c.name}</div>\r\n            <div style={{ fontSize:10, color:'var(--muted)' }}>{(c.categories||[]).join('/')}</div>\r\n            {c.effect && <div style={{ fontSize:10, color:'var(--accent)' }}>{c.effect}</div>}\r\n            <div style={{ display:'flex', gap:4, flexWrap:'wrap', fontSize:10, marginTop:2 }}>\r\n              {c.taunt && <span style={{ padding:'0 4px', border:'1px solid #999', borderRadius:3 }}>Prov</span>}\r\n              {c.shield && <span style={{ padding:'0 4px', border:'1px solid #999', borderRadius:3 }}>Bouclier</span>}\r\n              {c.charge && <span style={{ padding:'0 4px', border:'1px solid #999', borderRadius:3 }}>Charge</span>}\r\n              {c.lifesteal && <span style={{ padding:'0 4px', border:'1px solid #999', borderRadius:3 }}>Vol</span>}\r\n            </div>\r\n            <div className=\"cg-stats\">{c.atk}/{c.hp}</div>\r\n            {/* impact flash */}\r\n            {impactId === c.uid && (\r\n              <div style={{ position:'absolute', inset:0, borderRadius:8, background: c.shield ? 'rgba(80,160,255,0.35)' : 'rgba(255,255,255,0.35)', filter:'blur(1px)' }} />\r\n            )}\r\n            {/* damage popups */}\r\n            {damageAnims.filter(d => d.id === c.uid).map(d => (\r\n              <div key={d.key} style={{ position:'absolute', top:-10, left:'50%', transform:'translateX(-50%)', color:'#e74c3c', fontWeight:800, textShadow:'0 0 2px #000', animation:'cg-float 0.7s ease-out forwards' }}>-{d.amount}</div>\r\n            ))}\r\n            {/* status fx */}\r\n            {c.taunt && <div className=\"fx-taunt\" />}\r\n            {c.shield && <div className=\"fx-shield\" />}\r\n            {c.charge && <div className=\"fx-charge\" />}\r\n            {c.lifesteal && <div className=\"fx-life\" />}\r\n          </div>\r\n        ))}\r\n        {/* Warlord Opp */}\r\n        <div className=\"cg-card warlord\" title={`Seigneur\\nATK:${WARLORD_ATK} PV:${p2Hp}`} onClick={() => selectedAttacker && onAttackWarlord && onAttackWarlord()} style={{ position:'relative' }} data-cg-id=\"WARLORD_P2\">\r\n          <div className=\"cg-name\">Seigneur</div>\r\n          <div className=\"cg-stats\">{WARLORD_ATK}/{p2Hp}</div>\r\n          {impactId === 'WARLORD_P2' && (\r\n            <div style={{ position:'absolute', inset:0, borderRadius:8, background:'rgba(255,255,255,0.35)', filter:'blur(1px)' }} />\r\n          )}\r\n          {damageAnims.filter(d => d.id === 'WARLORD_P2').map(d => (\r\n            <div key={d.key} style={{ position:'absolute', top:-10, left:'50%', transform:'translateX(-50%)', color:'#e74c3c', fontWeight:800, textShadow:'0 0 2px #000', animation:'cg-float 0.7s ease-out forwards' }}>-{d.amount}</div>\r\n          ))}\r\n        </div>\r\n        {/* pas de placeholder vide: le Seigneur est toujours affiché */}\r\n      </div>\r\n      <div className=\"cg-row self\">\r\n        {p1Field.map(c => {\r\n          const selected = selectedAttacker && selectedAttacker.uid === c.uid;\r\n          const can = c.canAttack && turn === 'P1';\r\n          return (\r\n            <div\r\n              key={c.uid}\r\n              className={`cg-card ${selected ? 'selected' : ''} ${can ? 'can-attack' : ''}`}\r\n              title={`${c.name}\\nATK:${c.atk} PV:${c.hp}${c.canAttack ? '' : '\\n(ne peut pas attaquer)'}`}\r\n              onClick={() => can && onSelectAttacker(c)}\r\n              style={{\r\n                ...cardStyle(c),\r\n                transform: attackAnim && attackAnim.attackerId === c.uid && attackAnim.attackerOwner==='P1' ? 'translateY(-18px)' : undefined,\r\n                position:'relative'\r\n              }}\r\n              data-cg-id={c.uid}\r\n            >\r\n              <div className=\"cg-name\">{c.name}</div>\r\n              <div style={{ fontSize:10, color:'var(--muted)' }}>{(c.categories||[]).join('/')}</div>\r\n              {c.effect && <div style={{ fontSize:10, color:'var(--accent)' }}>{c.effect}</div>}\r\n              <div style={{ display:'flex', gap:4, flexWrap:'wrap', fontSize:10, marginTop:2 }}>\r\n                {c.taunt && <span style={{ padding:'0 4px', border:'1px solid #999', borderRadius:3 }}>Prov</span>}\r\n                {c.shield && <span style={{ padding:'0 4px', border:'1px solid #999', borderRadius:3 }}>Bouclier</span>}\r\n                {c.charge && <span style={{ padding:'0 4px', border:'1px solid #999', borderRadius:3 }}>Charge</span>}\r\n                {c.lifesteal && <span style={{ padding:'0 4px', border:'1px solid #999', borderRadius:3 }}>Vol</span>}\r\n              </div>\r\n              <div className=\"cg-stats\">{c.atk}/{c.hp}</div>\r\n              {impactId === c.uid && (\r\n                <div style={{ position:'absolute', inset:0, borderRadius:8, background: c.shield ? 'rgba(80,160,255,0.35)' : 'rgba(255,255,255,0.35)', filter:'blur(1px)' }} />\r\n              )}\r\n              {damageAnims.filter(d => d.id === c.uid).map(d => (\r\n                <div key={d.key} style={{ position:'absolute', top:-10, left:'50%', transform:'translateX(-50%)', color:'#e74c3c', fontWeight:800, textShadow:'0 0 2px #000', animation:'cg-float 0.7s ease-out forwards' }}>-{d.amount}</div>\r\n              ))}\r\n              {c.taunt && <div className=\"fx-taunt\" />}\r\n              {c.shield && <div className=\"fx-shield\" />}\r\n              {c.charge && <div className=\"fx-charge\" />}\r\n              {c.lifesteal && <div className=\"fx-life\" />}\r\n            </div>\r\n          );\r\n        })}\r\n        {/* Warlord Self (sélection possible en attaquant) */}\r\n        {(() => {\r\n          const isSelected = selectedAttacker && selectedAttacker.isWarlord;\r\n          const can = turn === 'P1' && !p1WarlordUsed;\r\n          const canSkill = turn === 'P1' && !p1WarlordUsed;\r\n          return (\r\n            <div\r\n              className={`cg-card warlord ${isSelected ? 'selected' : ''} ${can ? 'can-attack' : ''}`}\r\n              title={`Seigneur\\nATK:${WARLORD_ATK} PV:${p1Hp}${can ? '' : '\\n(déjà utilisé)'}`}\r\n              onClick={() => can && onSelectWarlord && onSelectWarlord()}\r\n              style={{ position:'relative' }}\r\n              data-cg-id=\"WARLORD_P1\"\r\n            >\r\n              <div className=\"cg-name\">Seigneur</div>\r\n              <div className=\"cg-stats\">{WARLORD_ATK}/{p1Hp}</div>\r\n              {impactId === 'WARLORD_P1' && (\r\n                <div style={{ position:'absolute', inset:0, borderRadius:8, background:'rgba(255,255,255,0.35)', filter:'blur(1px)' }} />\r\n              )}\r\n              {damageAnims.filter(d => d.id === 'WARLORD_P1').map(d => (\r\n                <div key={d.key} style={{ position:'absolute', top:-10, left:'50%', transform:'translateX(-50%)', color:'#e74c3c', fontWeight:800, textShadow:'0 0 2px #000', animation:'cg-float 0.7s ease-out forwards' }}>-{d.amount}</div>\r\n              ))}\r\n              {/* Bouton capacité Seigneur: 1e → pioche 1 */}\r\n              <button\r\n                className=\"week-btn\"\r\n                style={{ position:'absolute', right:4, bottom:4, padding:'2px 6px', fontSize:10 }}\r\n                disabled={!canSkill}\r\n                onClick={(e) => { e.stopPropagation(); onWarlordAbility && onWarlordAbility(); }}\r\n                title=\"Capacité: 1 énergie → pioche 1\"\r\n              >1e: Tirer</button>\r\n            </div>\r\n          );\r\n        })()}\r\n        {/* pas de placeholder vide: le Seigneur est toujours affiché */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction AimLine({ fromId, toId }) {\r\n  const [style, setStyle] = React.useState(null);\r\n  React.useEffect(() => {\r\n    if (!fromId || !toId) return;\r\n    const fromEl = document.querySelector(`[data-cg-id=\"${CSS.escape(fromId)}\"]`);\r\n    const toEl = document.querySelector(`[data-cg-id=\"${CSS.escape(toId)}\"]`);\r\n    if (!fromEl || !toEl) return;\r\n    const fb = fromEl.getBoundingClientRect();\r\n    const tb = toEl.getBoundingClientRect();\r\n    const sx = fb.left + fb.width/2; const sy = fb.top + fb.height/2;\r\n    const ex = tb.left + tb.width/2; const ey = tb.top + tb.height/2;\r\n    const dx = ex - sx; const dy = ey - sy;\r\n    const len = Math.hypot(dx, dy);\r\n    const ang = Math.atan2(dy, dx) * 180 / Math.PI;\r\n    const x = sx; const y = sy;\r\n    setStyle({ position:'fixed', left:x, top:y, width:len, height:3, transform:`rotate(${ang}deg)`, transformOrigin:'0 50%', background:'linear-gradient(90deg, rgba(255,255,255,0.0), rgba(255,255,255,0.8), rgba(255,255,255,0.0))', pointerEvents:'none', borderRadius:2 });\r\n    const id = setTimeout(() => setStyle(null), 250);\r\n    return () => clearTimeout(id);\r\n  }, [fromId, toId]);\r\n  if (!style) return null;\r\n  return <div style={style} />;\r\n}"],"names":["WARLORD_ATK","makeDeck","seedOwner","base","id","name","cost","atk","hp","categories","faction","effect","charge","taunt","shield","lifesteal","deck","i","forEach","c","push","_objectSpread","uid","Math","random","toString","slice","length","j","floor","CardBattle","screen","setScreen","useState","aiTimerRef","useRef","aiTimeoutsRef","battleInitRef","turnTimerRef","progressTickRef","turnEndsAt","setTurnEndsAt","turnProgress","setTurnProgress","p1","setP1","hand","field","energy","maxEnergy","fatigue","warlordUsed","warlordName","p2","setP2","turn","setTurn","log","setLog","selectedAttacker","setSelectedAttacker","winner","setWinner","turnCount","setTurnCount","attackAnim","setAttackAnim","impactId","setImpactId","damageAnims","setDamageAnims","shake","setShake","projectile","setProjectile","placeSide","setPlaceSide","p1Ref","p2Ref","turnRef","winnerRef","clearAllAiTimeouts","current","clearTimeout","scheduleAiTimeout","cb","delay","setTimeout","stopAllTimers","clearInterval","appendLog","text","l","mutatePlayer","fn","p","getPlayer","getPlayerNow","getTurnNow","getWinnerNow","opponent","drawCards","pid","n","arguments","undefined","pp","available","drawCount","min","missing","baseFatigue","totalDmg","drawn","splice","concat","checkWinner","activateWarlordAbility","owner","s","startTurn","map","canAttack","endsAt","Date","now","round","setInterval","prev","left","max","endTurnSafe","ai","scoreCard","energyLeft","virtualHand","toPlay","energyCap","affordable","filter","sort","a","b","pick","h","find","tp","slotsLeft","batch","reduce","predictedAttackers","canWarlordPred","actions","ai2","attackers","effectiveDefDamage","def","atkCard","enemyFieldNow","tauntsNow","x","poolNow","killable","t","surviveKill","target","enemyFieldLatest","tauntsL","poolL","killablesL","targetL","per","runAttack","total","aiPlay","aiNow","canWarlord","attackerOwner","attackerKind","attackerUid","targetKind","targetUidMaybe","attackerId","targetId","fromOwner","fromId","toId","ts","atkP","defOwner","defP","dmgList","attacker","defender","aToD","dToA","amount","toHero","riposte","toDef","keysList","d","key","some","doWarlordAttackVsPlayer","defenderUid","aDmg","dDmg","newShield","taken","doWarlordAttackVsCreature","creature","dmg","prevHp","inflicted","healed","newHp","doAttackCreatureVsPlayer","defenderTook","heal","doAttackCreatureVsCreature","toClear","k","includes","p1hp","p2hp","expectedTurn","restart","useEffect","you","enemy","Nav","_jsxs","style","display","gap","flexWrap","borderTop","paddingTop","marginTop","children","_jsx","className","onClick","padding","color","PlayerBoard","player","isSelf","onCardClick","selectable","highlightAttacker","Arena","p1Field","p2Field","p1Hp","p2Hp","p1WarlordUsed","onSelectAttacker","card","clickFieldCard","onSelectWarlord","isWarlord","onWarlordAbility","onAttackCard","defUid","enemyHasTaunt","onAttackWarlord","cardUid","newUnit","onAttackPlayer","alignItems","fontSize","margin","position","width","height","flex","title","ceil","inset","borderRadius","background","disabled","justifyContent","pointerEvents","fontWeight","paddingLeft","lineHeight","maxHeight","overflowY","listStyle","marginBottom","_ref","cardStyle","boxShadow","transition","join","border","_ref2","AimLine","transform","top","textShadow","animation","selected","can","isSelected","canSkill","right","bottom","e","stopPropagation","_ref3","setStyle","React","fromEl","document","querySelector","CSS","escape","toEl","fb","getBoundingClientRect","tb","sx","sy","dx","dy","len","hypot","ang","atan2","PI","transformOrigin"],"sourceRoot":""}