{"version":3,"file":"static/js/537.d3ef93ef.chunk.js","mappings":"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","sources":["components/games/CardBattle.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\n\r\nconst WARLORD_ATK = 2;\r\n\r\nfunction makeDeck(seedOwner) {\r\n  const base = [\r\n    { id: 'c1', name: 'Soldat', cost: 1, atk: 1, hp: 2, categories:['Empire','Infanterie'], faction:'Empire', effect:'' },\r\n    { id: 'c2', name: 'Archer', cost: 2, atk: 2, hp: 2, charge: true, categories:['Empire','Infanterie'], faction:'Empire', effect:'Charge' },\r\n    { id: 'c3', name: 'Garde', cost: 2, atk: 1, hp: 4, taunt: true, categories:['Empire','Infanterie'], faction:'Empire', effect:'Provocation' },\r\n    { id: 'c4', name: 'Champion', cost: 3, atk: 3, hp: 3, shield: true, categories:['Empire','Infanterie'], faction:'Empire', effect:'Bouclier' },\r\n    { id: 'c5', name: 'Berserker', cost: 4, atk: 5, hp: 2, lifesteal: true, categories:['Empire','Infanterie'], faction:'Empire', effect:'Vol de vie' },\r\n    { id: 'c6', name: 'Paladin', cost: 5, atk: 4, hp: 5, lifesteal: true, categories:['Empire','Infanterie'], faction:'Empire', effect:'Vol de vie' },\r\n  ];\r\n  const deck = [];\r\n  for (let i = 0; i < 3; i++) {\r\n    base.forEach(c => deck.push({ ...c, uid: seedOwner + '_' + c.id + '_' + i + '_' + Math.random().toString(36).slice(2,7) }));\r\n  }\r\n  // shuffle\r\n  for (let i = deck.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random()* (i+1));\r\n    [deck[i], deck[j]] = [deck[j], deck[i]];\r\n  }\r\n  return deck;\r\n}\r\n\r\nexport default function CardBattle() {\r\n  // Ecran courant: home | battle | deck | shop | event | clan\r\n  const [screen, setScreen] = useState('home');\r\n  const aiTimerRef = useRef(null);\r\n  const aiTimeoutsRef = useRef([]); // track all queued AI timeouts for cancellation\r\n  const battleInitRef = useRef(false);\r\n  const turnTimerRef = useRef(null);\r\n  const progressTickRef = useRef(null);\r\n  const [turnEndsAt, setTurnEndsAt] = useState(null); // timestamp ms\r\n  const [turnProgress, setTurnProgress] = useState(0); // 0..1\r\n\r\n  const [p1, setP1] = useState({\r\n    name: 'Vous',\r\n    hp: 20,\r\n    deck: makeDeck('P1'),\r\n    hand: [],\r\n    field: [],\r\n    energy: 0,\r\n    maxEnergy: 0,\r\n    fatigue: 0,\r\n    warlordUsed: false,\r\n    warlordName: 'Seigneur',\r\n  });\r\n  const [p2, setP2] = useState({\r\n    name: 'IA',\r\n    hp: 20,\r\n    deck: makeDeck('P2'),\r\n    hand: [],\r\n    field: [],\r\n    energy: 0,\r\n    maxEnergy: 0,\r\n    fatigue: 0,\r\n    warlordUsed: false,\r\n    warlordName: 'Seigneur IA',\r\n  });\r\n  const [turn, setTurn] = useState('P1'); // P1 ou P2\r\n  const [log, setLog] = useState([]);\r\n  const [selectedAttacker, setSelectedAttacker] = useState(null);\r\n  const [winner, setWinner] = useState(null);\r\n  const [turnCount, setTurnCount] = useState(0);\r\n  const [attackAnim, setAttackAnim] = useState(null); // { attackerId, attackerOwner }\r\n  const [impactId, setImpactId] = useState(null); // uid or WARLORD_*\r\n  const [damageAnims, setDamageAnims] = useState([]); // [{ id, amount, owner, key }]\r\n  const [shake, setShake] = useState(false);\r\n  const [projectile, setProjectile] = useState(null); // { fromOwner, fromId, toId, ts }\r\n  const [placeSide, setPlaceSide] = useState('right'); // 'left' | 'right'\r\n  const [pendingPlayUid, setPendingPlayUid] = useState(null); // card uid waiting for slot selection\r\n  const [warlordExplosion, setWarlordExplosion] = useState(null); // 'WARLORD_P1'|'WARLORD_P2'|null\r\n\r\n  // Live refs to avoid stale reads inside timeouts\r\n  const p1Ref = useRef(p1);\r\n  const p2Ref = useRef(p2);\r\n  const turnRef = useRef(turn);\r\n  const winnerRef = useRef(winner);\r\n  useEffect(() => { p1Ref.current = p1; }, [p1]);\r\n  useEffect(() => { p2Ref.current = p2; }, [p2]);\r\n  useEffect(() => { turnRef.current = turn; }, [turn]);\r\n  useEffect(() => { winnerRef.current = winner; }, [winner]);\r\n\r\n  // Setup initial draw (guardé pour éviter un double init quand restart() est appelé)\r\n  useEffect(() => {\r\n    if (screen === 'battle' && !battleInitRef.current && p1.hand.length === 0 && p2.hand.length === 0) {\r\n      battleInitRef.current = true;\r\n      drawCards('P1', 3);\r\n      drawCards('P2', 3);\r\n      startTurn('P1');\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [screen]);\r\n\r\n  // Nettoyer timers à l'unmount ou changement d'écran\r\n  useEffect(() => {\r\n    return () => {\r\n      clearAllAiTimeouts();\r\n      if (turnTimerRef.current) {\r\n        clearTimeout(turnTimerRef.current);\r\n        turnTimerRef.current = null;\r\n      }\r\n      if (progressTickRef.current) {\r\n        clearInterval(progressTickRef.current);\r\n        progressTickRef.current = null;\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  // Central helpers for AI timers and global timers\r\n  function clearAllAiTimeouts() {\r\n    if (aiTimerRef.current) {\r\n      clearTimeout(aiTimerRef.current);\r\n      aiTimerRef.current = null;\r\n    }\r\n    if (aiTimeoutsRef.current && aiTimeoutsRef.current.length) {\r\n      aiTimeoutsRef.current.forEach(id => clearTimeout(id));\r\n      aiTimeoutsRef.current = [];\r\n    }\r\n  }\r\n\r\n  function scheduleAiTimeout(cb, delay) {\r\n    const id = setTimeout(cb, delay);\r\n    aiTimeoutsRef.current.push(id);\r\n    return id;\r\n  }\r\n\r\n  function stopAllTimers() {\r\n    // stop turn and progress timers and all AI-related timers\r\n    if (turnTimerRef.current) {\r\n      clearTimeout(turnTimerRef.current);\r\n      turnTimerRef.current = null;\r\n    }\r\n    if (progressTickRef.current) {\r\n      clearInterval(progressTickRef.current);\r\n      progressTickRef.current = null;\r\n    }\r\n    clearAllAiTimeouts();\r\n    setTurnEndsAt(null);\r\n    setTurnProgress(0);\r\n  }\r\n\r\n  function appendLog(text) {\r\n    setLog(l => [text, ...l.slice(0, 49)]);\r\n  }\r\n\r\n  function mutatePlayer(id, fn) {\r\n    if (id === 'P1') setP1(p => { const np = { ...p, ...fn(p) }; p1Ref.current = np; return np; });\r\n    else setP2(p => { const np = { ...p, ...fn(p) }; p2Ref.current = np; return np; });\r\n  }\r\n\r\n  function getPlayer(id) {\r\n    return id === 'P1' ? p1 : p2;\r\n  }\r\n  function getPlayerNow(id) {\r\n    return id === 'P1' ? p1Ref.current : p2Ref.current;\r\n  }\r\n  function getTurnNow() {\r\n    return turnRef.current;\r\n  }\r\n  function getWinnerNow() {\r\n    return winnerRef.current;\r\n  }\r\n\r\n  function opponent(id) {\r\n    return id === 'P1' ? 'P2' : 'P1';\r\n  }\r\n\r\n  function drawCards(pid, n = 1) {\r\n    const pp = getPlayer(pid);\r\n    const available = pp.deck.length;\r\n    const drawCount = Math.min(n, available);\r\n    const missing = n - drawCount;\r\n    // dégâts de fatigue croissants: 1,2,3,... par pioche manquée\r\n    const baseFatigue = pp.fatigue || 0;\r\n    let totalDmg = 0;\r\n    for (let i = 1; i <= missing; i++) totalDmg += baseFatigue + i;\r\n    mutatePlayer(pid, p => {\r\n      const deck = [...p.deck];\r\n      const drawn = deck.splice(0, drawCount);\r\n      const hand = [...p.hand, ...drawn];\r\n      const fatigue = (p.fatigue || 0) + missing;\r\n      const hp = p.hp - totalDmg;\r\n      return { deck, hand, fatigue, hp };\r\n    });\r\n    if (missing > 0) {\r\n      appendLog(`[Fatigue] ${pp.name} subit ${totalDmg} dégât(s) (pioche impossible)`);\r\n      // petite vérification de fin si la fatigue a tué le joueur\r\n      setTimeout(() => checkWinner(), 0);\r\n    }\r\n  }\r\n\r\n  function activateWarlordAbility(owner) {\r\n    // Capacité: 1 énergie → piocher 1, consomme l'action du seigneur (pas d'attaque ensuite)\r\n    if (getWinnerNow()) return;\r\n    if (getTurnNow() !== owner) return;\r\n    const p = getPlayer(owner);\r\n    if (p.warlordUsed) return;\r\n    if (p.energy < 1) { appendLog(`[Seigneur] Pas assez d'énergie.`); return; }\r\n    mutatePlayer(owner, s => ({ energy: s.energy - 1, warlordUsed: true }));\r\n    drawCards(owner, 1);\r\n    appendLog(`[Seigneur] ${p.name} utilise sa capacité: pioche 1 (coût 1)`);\r\n  }\r\n\r\n  function startTurn(pid) {\r\n    setSelectedAttacker(null);\r\n    setTurn(pid);\r\n    setTurnCount(c => c + (pid === 'P1' ? 1 : 0));\r\n    mutatePlayer(pid, p => {\r\n      const maxEnergy = Math.min(10, p.maxEnergy + 1);\r\n      const energy = maxEnergy;\r\n      // Rendre toutes les créatures aptes à attaquer au début du tour\r\n      const field = p.field.map(c => ({ ...c, canAttack: true }));\r\n      return { energy, maxEnergy, warlordUsed: false, field };\r\n    });\r\n    drawCards(pid, 1);\r\n    appendLog(`[Tour] ${getPlayer(pid).name}`);\r\n  // Timer de tour dynamique (avant le 5e round: 30s, à partir du 6e: 60s)\r\n    // clear any leftover AI actions when a new turn begins\r\n    clearAllAiTimeouts();\r\n    if (turnTimerRef.current) { clearTimeout(turnTimerRef.current); turnTimerRef.current = null; }\r\n  const nextRound = pid === 'P1' ? (turnCount + 1) : turnCount; // incrément appliqué sur P1\r\n  const delay = nextRound >= 6 ? 60000 : 30000;\r\n    const endsAt = Date.now() + delay;\r\n    setTurnEndsAt(endsAt);\r\n  appendLog(`[Timer] ${getPlayer(pid).name}: ${Math.round(delay/1000)}s`);\r\n    // Progress ticking\r\n    setTurnProgress(0);\r\n    if (progressTickRef.current) { clearInterval(progressTickRef.current); progressTickRef.current = null; }\r\n    progressTickRef.current = setInterval(() => {\r\n      setTurnProgress(prev => {\r\n        const now = Date.now();\r\n        const left = Math.max(0, endsAt - now);\r\n        const ratio = Math.min(1, 1 - left / delay);\r\n        return ratio;\r\n      });\r\n    }, 100);\r\n    turnTimerRef.current = setTimeout(() => {\r\n      if (!winner && turn === pid) {\r\n        appendLog(`[Timer] Fin automatique du tour de ${getPlayer(pid).name}`);\r\n        endTurnSafe(pid);\r\n      }\r\n    }, delay);\r\n    // IA si P2\r\n    if (pid === 'P2') {\r\n      if (aiTimerRef.current) clearTimeout(aiTimerRef.current);\r\n      aiTimerRef.current = setTimeout(() => aiPlay(), 300);\r\n      // Failsafe: si après un court délai l'IA n'a toujours aucune action, finir le tour\r\n      scheduleAiTimeout(() => {\r\n        if (getWinnerNow() || getTurnNow() !== 'P2') return;\r\n        const aiNow = getPlayerNow('P2');\r\n        const attackers = aiNow.field.filter(c => c.canAttack);\r\n        const canWarlord = !aiNow.warlordUsed && WARLORD_ATK > 0;\r\n        if (attackers.length === 0 && !canWarlord) {\r\n          appendLog(`[IA] Failsafe: fin de tour`);\r\n          endTurnSafe('P2');\r\n        }\r\n      }, 1200);\r\n    }\r\n  }\r\n\r\n  function endTurn() {\r\n    if (winner) return;\r\n    clearAllAiTimeouts();\r\n    if (turnTimerRef.current) { clearTimeout(turnTimerRef.current); turnTimerRef.current = null; }\r\n    if (progressTickRef.current) { clearInterval(progressTickRef.current); progressTickRef.current = null; }\r\n    setTurnEndsAt(null);\r\n    setTurnProgress(0);\r\n    startTurn(opponent(turn));\r\n  }\r\n\r\n  function chooseCardToPlay(cardUid) {\r\n    if (turn !== 'P1' || winner) return;\r\n    const player = getPlayer('P1');\r\n    const card = player.hand.find(c => c.uid === cardUid);\r\n    if (!card) return;\r\n    if (player.energy < card.cost) { appendLog(`[Jeu] Pas assez d'énergie pour ${card.name}`); return; }\r\n    if (player.field.length >= 8) { appendLog(`[Limite] Vous avez déjà 8 troupes en jeu.`); return; }\r\n    setPendingPlayUid(cardUid);\r\n    appendLog(`[Jeu] Choisissez une case pour ${card.name}`);\r\n  }\r\n\r\n  function placePendingAt(slotIndex) {\r\n    if (turn !== 'P1' || winner) return;\r\n    if (!pendingPlayUid && pendingPlayUid !== 0) return;\r\n    const p = getPlayer('P1');\r\n    const card = p.hand.find(c => c.uid === pendingPlayUid);\r\n    if (!card) { setPendingPlayUid(null); return; }\r\n    if (p.energy < card.cost) { appendLog(`[Jeu] Plus assez d'énergie.`); setPendingPlayUid(null); return; }\r\n    if (p.field.length >= 8) { appendLog(`[Limite] Vous avez déjà 8 troupes en jeu.`); setPendingPlayUid(null); return; }\r\n    const target = Math.max(0, Math.min(7, slotIndex|0));\r\n    mutatePlayer('P1', s => {\r\n      const hand = s.hand.filter(c => c.uid !== pendingPlayUid);\r\n      const units = s.field.map(u => ({ ...u }));\r\n      // Construire l'occupation des 9 slots, avec fallback séquentiel si pas de slot\r\n      const slots = Array(8).fill(null);\r\n      let fb = 0;\r\n      for (const u of units) {\r\n        let idx = Number.isInteger(u.slot) ? u.slot : fb++;\r\n        if (idx < 0) idx = 0; if (idx > 7) idx = 7;\r\n        // si collision sur fallback, cherche la prochaine libre vers la droite\r\n        while (idx <= 7 && slots[idx]) idx++;\r\n        if (idx <= 7) { slots[idx] = u; u.slot = idx; }\r\n      }\r\n      // Vérifier place à target, sinon pousser vers l'extérieur depuis target\r\n      const newUnit = { ...card, canAttack: !!card.charge, slot: target };\r\n      if (!slots[target]) {\r\n        slots[target] = newUnit;\r\n      } else {\r\n        // déterminer direction \"vers l'extérieur\" : gauche si côté gauche, droite sinon\r\n        let dir = (target <= 3) ? -1 : 1;\r\n        let k = target;\r\n        while (k >= 0 && k < 8 && slots[k]) k += dir;\r\n        if (k < 0 || k > 7) {\r\n          // débordement: essayer l'autre côté\r\n          dir = -dir;\r\n          k = target;\r\n          while (k >= 0 && k < 8 && slots[k]) k += dir;\r\n          if (k < 0 || k > 7) {\r\n            appendLog(`[Limite] Aucune place disponible pour pousser.`);\r\n            return s; // aucune modification\r\n          }\r\n        }\r\n        // décaler la chaîne dans le sens dir, depuis la case libre jusqu'à target\r\n        for (let i = k; i !== target; i -= dir) {\r\n          const from = i - dir;\r\n          slots[i] = slots[from];\r\n          if (slots[i]) slots[i].slot = i;\r\n        }\r\n        slots[target] = newUnit;\r\n      }\r\n      // Reconstituer le field trié par slot\r\n      const field = slots.filter(Boolean);\r\n      const energy = s.energy - card.cost;\r\n      return { hand, field, energy };\r\n    });\r\n    appendLog(`[Jeu] ${card.name} placé en case ${slotIndex+1}`);\r\n    setPendingPlayUid(null);\r\n  }\r\n\r\n  function clickFieldCard(card, owner) {\r\n    if (winner) return;\r\n    if (turn !== owner) return;\r\n    if (!card.canAttack) return;\r\n    if (turn === 'P1') {\r\n      // sélectionner attaquant\r\n      if (selectedAttacker && selectedAttacker.uid === card.uid) {\r\n        setSelectedAttacker(null);\r\n      } else {\r\n        setSelectedAttacker(card);\r\n      }\r\n    }\r\n  }\r\n\r\n  // plus de bouton d'attaque direct sur le héros; attaque via onAttackWarlord/targeting\r\n  // Animation utilitaire: lance une attaque avec une courte translation visuelle\r\n  function runAttack(attackerOwner, attackerKind, attackerUid, targetKind, targetUidMaybe) {\r\n    // Guard against late-firing AI actions after turn switch or game end\r\n    if (getWinnerNow()) return;\r\n    if (getTurnNow() !== attackerOwner) return;\r\n    const attackerId = attackerKind === 'warlord' ? `WARLORD_${attackerOwner}` : attackerUid;\r\n    const targetId = targetKind === 'warlord' ? `WARLORD_${opponent(attackerOwner)}` : targetUidMaybe;\r\n  setAttackAnim({ attackerId, attackerOwner, targetId, targetKind });\r\n  // trace visuelle: projectile simple\r\n  setProjectile({ fromOwner: attackerOwner, fromId: attackerId, toId: targetId, ts: Date.now() });\r\n\r\n    // Pré-calcul des dégâts pour afficher les popups (approx selon bouclier / riposte)\r\n    const atkP = getPlayerNow(attackerOwner);\r\n    const defOwner = opponent(attackerOwner);\r\n    const defP = getPlayerNow(defOwner);\r\n    let dmgList = [];\r\n    if (attackerKind === 'creature' && targetKind === 'creature') {\r\n      const attacker = (atkP.field || []).find(c => c.uid === attackerUid);\r\n      const defender = (defP.field || []).find(c => c.uid === targetUidMaybe);\r\n      if (attacker && defender) {\r\n        const aToD = defender.shield ? 0 : attacker.atk;\r\n        const dToA = attacker.shield ? 0 : defender.atk;\r\n        if (aToD > 0) dmgList.push({ id: defender.uid, amount: aToD, owner: defOwner });\r\n        if (dToA > 0) dmgList.push({ id: attacker.uid, amount: dToA, owner: attackerOwner });\r\n      }\r\n    } else if (attackerKind === 'creature' && targetKind === 'warlord') {\r\n      const attacker = (atkP.field || []).find(c => c.uid === attackerUid);\r\n      if (attacker) {\r\n        const toHero = attacker.atk;\r\n        const riposte = attacker.shield ? 0 : WARLORD_ATK;\r\n        if (toHero > 0) dmgList.push({ id: `WARLORD_${defOwner}`, amount: toHero, owner: defOwner });\r\n        if (riposte > 0) dmgList.push({ id: attacker.uid, amount: riposte, owner: attackerOwner });\r\n      }\r\n    } else if (attackerKind === 'warlord' && targetKind === 'creature') {\r\n      const defender = (defP.field || []).find(c => c.uid === targetUidMaybe);\r\n      if (defender) {\r\n        const toDef = defender.shield ? 0 : WARLORD_ATK;\r\n        const riposte = defender.atk;\r\n        if (toDef > 0) dmgList.push({ id: defender.uid, amount: toDef, owner: defOwner });\r\n        if (riposte > 0) dmgList.push({ id: `WARLORD_${attackerOwner}`, amount: riposte, owner: attackerOwner });\r\n      }\r\n    } else if (attackerKind === 'warlord' && targetKind === 'warlord') {\r\n      if (WARLORD_ATK > 0) {\r\n        dmgList.push({ id: `WARLORD_${defOwner}`, amount: WARLORD_ATK, owner: defOwner });\r\n        dmgList.push({ id: `WARLORD_${attackerOwner}`, amount: WARLORD_ATK, owner: attackerOwner });\r\n      }\r\n    }\r\n\r\n    // appliquer les dégâts après un court délai pour laisser l'anim se voir\r\n    let keysList = [];\r\n    setTimeout(() => {\r\n      if (getWinnerNow() || getTurnNow() !== attackerOwner) return; // re-check before applying effects\r\n      // Impact flash + dégâts flottants\r\n      if (targetId) setImpactId(targetId);\r\n      if (dmgList.length) {\r\n        keysList = dmgList.map((d, i) => ({ ...d, key: `${Date.now()}_${i}` }));\r\n        setDamageAnims(prev => [...prev, ...keysList].slice(-12));\r\n        if (keysList.some(d => d.amount >= 4)) {\r\n          setShake(true);\r\n          setTimeout(() => setShake(false), 120);\r\n        }\r\n      }\r\n      if (attackerKind === 'warlord' && targetKind === 'warlord') {\r\n        doWarlordAttackVsPlayer(attackerOwner);\r\n      } else if (attackerKind === 'warlord' && targetKind === 'creature') {\r\n        doWarlordAttackVsCreature(attackerOwner, targetUidMaybe);\r\n      } else if (attackerKind === 'creature' && targetKind === 'warlord') {\r\n        doAttackCreatureVsPlayer(attackerOwner, attackerUid);\r\n      } else {\r\n        doAttackCreatureVsCreature(attackerOwner, attackerUid, targetUidMaybe);\r\n      }\r\n      // clear impact after short delay\r\n      setTimeout(() => setImpactId(null), 260);\r\n      // clear damage popups later\r\n      const toClear = keysList.map(k => k.key);\r\n      setTimeout(() => setDamageAnims(prev => prev.filter(x => !toClear.includes(x.key))), 700);\r\n    }, 180);\r\n    // retour visuel\r\n    setTimeout(() => setAttackAnim(null), 600);\r\n    setTimeout(() => setProjectile(null), 320);\r\n  }\r\n\r\n  function doAttackCreatureVsPlayer(attackerOwner, attackerUid) {\r\n    const defOwner = opponent(attackerOwner);\r\n    const atkP = getPlayer(attackerOwner);\r\n    const defP = getPlayer(defOwner);\r\n    const creature = atkP.field.find(c => c.uid === attackerUid);\r\n    if (!creature || !creature.canAttack) return;\r\n    const dmg = creature.atk;\r\n    const prevHp = defP.hp;\r\n    const inflicted = Math.max(0, Math.min(dmg, prevHp));\r\n    // appliquer les dégâts au Seigneur (héros)\r\n    mutatePlayer(defOwner, p => ({ hp: p.hp - dmg }));\r\n    // riposte du Seigneur: inflige WARLORD_ATK au chercheur (consomme son bouclier si présent)\r\n    mutatePlayer(attackerOwner, p => {\r\n      const healed = creature.lifesteal ? inflicted : 0;\r\n      const field = p.field\r\n        .map(c => {\r\n          if (c.uid !== attackerUid) return c;\r\n          const consumedShield = WARLORD_ATK > 0 && c.shield;\r\n          const newShield = consumedShield ? false : c.shield;\r\n          const taken = c.shield ? 0 : WARLORD_ATK;\r\n          const newHp = c.hp - taken;\r\n          return { ...c, canAttack: false, shield: newShield, hp: newHp };\r\n        })\r\n        .filter(c => c.hp > 0);\r\n      return { hp: p.hp + healed, field };\r\n    });\r\n    appendLog(`[Attaque] ${atkP.name} (${creature.name}) inflige ${dmg} à ${defP.name}`);\r\n    if (WARLORD_ATK > 0) appendLog(`[Seigneur] Riposte et inflige ${WARLORD_ATK} à l'attaquant`);\r\n    checkWinner();\r\n  }\r\n\r\n  function doWarlordAttackVsPlayer(attackerOwner) {\r\n    const defOwner = opponent(attackerOwner);\r\n    const atkP = getPlayer(attackerOwner);\r\n    const defP = getPlayer(defOwner);\r\n    if (atkP.warlordUsed || turn !== attackerOwner) return;\r\n    // dégâts sur le héros adverse\r\n    mutatePlayer(defOwner, p => ({ hp: p.hp - WARLORD_ATK }));\r\n    // riposte symétrique du seigneur adverse\r\n    mutatePlayer(attackerOwner, p => ({ hp: p.hp - WARLORD_ATK }));\r\n    // marquer l'utilisation de l'attaque du seigneur\r\n    mutatePlayer(attackerOwner, p => ({ warlordUsed: true }));\r\n    appendLog(`[Seigneur] ${atkP.name} attaque ${defP.name} pour ${WARLORD_ATK} (riposte ${WARLORD_ATK})`);\r\n    checkWinner();\r\n  }\r\n\r\n  function doWarlordAttackVsCreature(attackerOwner, defenderUid) {\r\n    const defOwner = opponent(attackerOwner);\r\n    const atkP = getPlayer(attackerOwner);\r\n    const defP = getPlayer(defOwner);\r\n    if (atkP.warlordUsed || turn !== attackerOwner) return;\r\n    const defender = defP.field.find(c => c.uid === defenderUid);\r\n    if (!defender) return;\r\n    const aDmg = WARLORD_ATK;\r\n    const dDmg = defender.atk;\r\n    // appliquer dégâts au défenseur (respect bouclier)\r\n    mutatePlayer(defOwner, p => ({\r\n      field: p.field\r\n        .map(c => {\r\n          if (c.uid !== defenderUid) return c;\r\n          const newShield = c.shield && aDmg > 0 ? false : c.shield;\r\n          const taken = c.shield ? 0 : aDmg;\r\n          return { ...c, hp: c.hp - taken, shield: newShield };\r\n        })\r\n        .filter(c => c.hp > 0),\r\n    }));\r\n    // riposte de la créature: dégâts au héros attaquant\r\n    mutatePlayer(attackerOwner, p => ({ hp: p.hp - dDmg, warlordUsed: true }));\r\n    appendLog(`[Seigneur] ${atkP.name} frappe une créature (${aDmg}) et subit ${dDmg} en riposte`);\r\n    checkWinner();\r\n  }\r\n\r\n  function doAttackCreatureVsCreature(attackerOwner, attackerUid, defenderUid) {\r\n    const defOwner = opponent(attackerOwner);\r\n    const atkP = getPlayer(attackerOwner);\r\n    const defP = getPlayer(defOwner);\r\n    const attacker = atkP.field.find(c => c.uid === attackerUid);\r\n    const defender = defP.field.find(c => c.uid === defenderUid);\r\n    if (!attacker || !defender || !attacker.canAttack) return;\r\n  const aDmg = attacker.atk;\r\n  const dDmg = defender.atk;\r\n  // gestion des boucliers (shield)\r\n  const defenderTook = defender.shield ? 0 : aDmg;\r\n\r\n    mutatePlayer(attackerOwner, p => {\r\n      const field = p.field\r\n        .map(c => {\r\n          if (c.uid !== attackerUid) return c;\r\n          const consumedShield = dDmg > 0 && c.shield;\r\n          const newShield = consumedShield ? false : c.shield;\r\n          const newHp = c.hp - (c.shield ? 0 : dDmg);\r\n          return { ...c, hp: newHp, canAttack: false, shield: newShield };\r\n        })\r\n        .filter(c => c.hp > 0);\r\n      const heal = attacker.lifesteal ? defenderTook : 0;\r\n      return { field, hp: p.hp + heal };\r\n    });\r\n\r\n    mutatePlayer(defOwner, p => ({\r\n      field: p.field\r\n        .map(c => {\r\n          if (c.uid !== defenderUid) return c;\r\n          const consumedShield = aDmg > 0 && c.shield;\r\n          const newShield = consumedShield ? false : c.shield;\r\n          const newHp = c.hp - (c.shield ? 0 : aDmg);\r\n          return { ...c, hp: newHp, shield: newShield };\r\n        })\r\n        .filter(c => c.hp > 0),\r\n    }));\r\n    appendLog(`[Combat] ${attacker.name} (${aDmg}) ↔ ${defender.name} (${dDmg})`);\r\n    checkWinner();\r\n  }\r\n\r\n  function checkWinner() {\r\n    if (getWinnerNow()) return;\r\n    const p1hp = p1Ref.current?.hp ?? p1.hp;\r\n    const p2hp = p2Ref.current?.hp ?? p2.hp;\r\n    if (p1hp <= 0 && p2hp <= 0) {\r\n      setWinner('Égalité');\r\n      stopAllTimers();\r\n    } else if (p1hp <= 0) {\r\n      // Explosion et annihilation des troupes P1\r\n      if (!warlordExplosion) setWarlordExplosion('WARLORD_P1');\r\n      setTimeout(() => mutatePlayer('P1', p => ({ ...p, field: [] })), 150);\r\n      setTimeout(() => setWarlordExplosion(null), 1200);\r\n      setWinner(p2Ref.current?.name || p2.name);\r\n      stopAllTimers();\r\n    } else if (p2hp <= 0) {\r\n      // Explosion et annihilation des troupes P2\r\n      if (!warlordExplosion) setWarlordExplosion('WARLORD_P2');\r\n      setTimeout(() => mutatePlayer('P2', p => ({ ...p, field: [] })), 150);\r\n      setTimeout(() => setWarlordExplosion(null), 1200);\r\n      setWinner(p1Ref.current?.name || p1.name);\r\n      stopAllTimers();\r\n    }\r\n  }\r\n\r\n  // (remplacé par logique dans startTurn)\r\n\r\n  // IA simple (v1): jouer une carte coût==énergie puis attaquer la plus forte, sinon le seigneur\r\n  function aiPlay() {\r\n    if (getWinnerNow()) return;\r\n    const ai = getPlayerNow('P2');\r\n    appendLog(`[IA] Réflexion…`);\r\n    // Essayer d'utiliser la capacité du seigneur si main faible et assez d'énergie\r\n    if (!ai.warlordUsed && ai.energy >= 1 && ai.hand.length <= 4) {\r\n      activateWarlordAbility('P2');\r\n    }\r\n    // 1) Jouer plusieurs cartes: choisit un ensemble de cartes qui maximise une valeur simple sous contrainte d'énergie\r\n    const scoreCard = (c) => c.atk * 2 + c.hp + (c.taunt ? 2 : 0) + (c.shield ? 1.5 : 0) + (c.charge ? 1 : 0) + (c.lifesteal ? 1.5 : 0);\r\n    let energyLeft = ai.energy;\r\n    let virtualHand = [...ai.hand];\r\n    const toPlay = [];\r\n    // glouton: à chaque étape, choisit la meilleure carte jouable selon score\r\n    while (true) {\r\n  const slotsLeft = Math.max(0, 8 - getPlayerNow('P2').field.length - toPlay.length);\r\n      if (slotsLeft <= 0) break;\r\n      const energyCap = energyLeft; // capture for eslint/no-loop-func\r\n      const affordable = virtualHand.filter(c => c.cost <= energyCap);\r\n      if (!affordable.length) break;\r\n      affordable.sort((a,b) => scoreCard(b) - scoreCard(a) || b.cost - a.cost);\r\n      const pick = affordable[0];\r\n      toPlay.push(pick);\r\n      energyLeft -= pick.cost;\r\n      virtualHand = virtualHand.filter(c => c.uid !== pick.uid);\r\n      // borne de sécurité\r\n      if (toPlay.length > 10) break;\r\n    }\r\n    // Poser les cartes une par une avec un petit délai\r\n    const placeDelay = 400;\r\n    const allowed = Math.max(0, 8 - getPlayerNow('P2').field.length);\r\n    const batch = toPlay.slice(0, allowed);\r\n    batch.forEach((c, i) => {\r\n      scheduleAiTimeout(() => {\r\n        if (getWinnerNow() || getTurnNow() !== 'P2') return;\r\n        mutatePlayer('P2', p => {\r\n          // si la carte n'est plus en main (déjà jouée), ne rien faire\r\n          if (!p.hand.find(h => h.uid === c.uid)) return p;\r\n          return {\r\n            hand: p.hand.filter(h => h.uid !== c.uid),\r\n            field: [...p.field, { ...c, canAttack: !!c.charge }],\r\n            energy: p.energy - c.cost,\r\n          };\r\n        });\r\n        appendLog(`[IA] Invoque ${c.name}`);\r\n      }, i * placeDelay);\r\n    });\r\n\r\n    // Ne décide de finir que dans le bloc d'actions (état à jour)\r\n\r\n    // 2) attaquer avec chaque créature: cible = carte ennemie la plus forte, sinon seigneur\r\n    const attacksStartDelay = (batch.length ? batch.length * placeDelay + 250 : 200);\r\n    scheduleAiTimeout(() => {\r\n      if (getWinnerNow() || getTurnNow() !== 'P2') {\r\n        appendLog(`[IA] Annulé: tour=${getTurnNow()} winner=${!!getWinnerNow()}`);\r\n        return; // tour déjà passé ou partie terminée\r\n      }\r\n      const actions = [];\r\n      const ai2 = getPlayerNow('P2');\r\n      const attackers = ai2.field.filter(c => c.canAttack);\r\n      appendLog(`[IA] Prépare ${attackers.length} attaquant(s)`);\r\n      if (attackers.length === 0 && (ai2.warlordUsed || WARLORD_ATK <= 0)) {\r\n        appendLog(`[IA] Aucune attaque possible.`);\r\n      }\r\n      // helpers pour évaluer les échanges en tenant compte des boucliers\r\n      const effectiveDefDamage = (def, atkCard) => (atkCard.shield ? 0 : def.atk);\r\n      for (const c of attackers) {\r\n        const enemyFieldNow = getPlayerNow('P1').field;\r\n        const tauntsNow = enemyFieldNow.filter(x => x.taunt);\r\n        const poolNow = tauntsNow.length ? tauntsNow : enemyFieldNow;\r\n        if (poolNow.length) {\r\n          const killable = poolNow.filter(t => !t.shield && c.atk >= t.hp);\r\n          // parmi killable, préférer ceux qui ne tuent pas l'attaquant en riposte\r\n          const surviveKill = killable.filter(t => c.hp - effectiveDefDamage(t, c) > 0);\r\n          let target;\r\n          if (surviveKill.length) {\r\n            target = [...surviveKill].sort((a,b) => b.atk - a.atk)[0];\r\n          } else if (killable.length) {\r\n            target = [...killable].sort((a,b) => b.atk - a.atk)[0];\r\n          } else {\r\n            // sinon, la plus grosse menace\r\n            target = [...poolNow].sort((a,b) => b.atk - a.atk)[0];\r\n          }\r\n          actions.push(['P2','creature', c.uid, 'creature', target.uid]);\r\n        } else {\r\n          actions.push(['P2','creature', c.uid, 'warlord']);\r\n        }\r\n      }\r\n\r\n      if (!getWinnerNow() && getTurnNow() === 'P2' && !getPlayerNow('P2').warlordUsed && WARLORD_ATK > 0) {\r\n        const enemyFieldLatest = getPlayerNow('P1').field;\r\n        const tauntsL = enemyFieldLatest.filter(x => x.taunt);\r\n        const poolL = tauntsL.length ? tauntsL : enemyFieldLatest;\r\n        if (poolL.length) {\r\n          // cible la créature la plus dangereuse (ou tuable) en priorité\r\n          const killablesL = poolL.filter(t => !t.shield && WARLORD_ATK >= t.hp);\r\n          const targetL = (killablesL.length\r\n            ? [...killablesL].sort((a,b) => b.atk - a.atk)[0]\r\n            : [...poolL].sort((a,b) => b.atk - a.atk)[0]);\r\n          actions.push(['P2','warlord','WARLORD_P2','creature', targetL.uid]);\r\n        } else {\r\n          actions.push(['P2','warlord','WARLORD_P2','warlord']);\r\n        }\r\n      }\r\n\r\n      const per = 350;\r\n      actions.forEach((a,i) => scheduleAiTimeout(() => runAttack(...a), i*per));\r\n      const total = actions.length * per + 450;\r\n      appendLog(`[IA] ${actions.length} action(s) d'attaque.`);\r\n      if (actions.length === 0) {\r\n        // rien à faire de plus -> fin de tour immédiate\r\n        if (!getWinnerNow() && getTurnNow() === 'P2') {\r\n          appendLog(`[IA] Fin de tour (aucune action)`);\r\n          endTurnSafe('P2');\r\n        }\r\n      } else {\r\n        scheduleAiTimeout(() => {\r\n          if (!getWinnerNow() && getTurnNow() === 'P2') {\r\n            endTurnSafe('P2');\r\n          }\r\n        }, total);\r\n      }\r\n  }, attacksStartDelay);\r\n  }\r\n\r\n  function endTurnSafe(expectedTurn) {\r\n    if (getWinnerNow()) return;\r\n    const curr = getTurnNow();\r\n    if (curr !== expectedTurn) return;\r\n    appendLog(`[Tour] Fin ${expectedTurn} → ${opponent(expectedTurn)}`);\r\n    clearAllAiTimeouts();\r\n    if (turnTimerRef.current) { clearTimeout(turnTimerRef.current); turnTimerRef.current = null; }\r\n    if (progressTickRef.current) { clearInterval(progressTickRef.current); progressTickRef.current = null; }\r\n    setTurnEndsAt(null);\r\n    setTurnProgress(0);\r\n    startTurn(opponent(expectedTurn));\r\n  }\r\n\r\n  function restart() {\r\n    // stop any ongoing timers before resetting state\r\n    stopAllTimers();\r\n    setWarlordExplosion(null);\r\n    setP1({\r\n      name: 'Vous',\r\n      hp: 20,\r\n      deck: makeDeck('P1'),\r\n      hand: [],\r\n      field: [],\r\n      energy: 0,\r\n      maxEnergy: 0,\r\n      fatigue: 0,\r\n      warlordUsed: false,\r\n      warlordName: 'Seigneur',\r\n    });\r\n    setP2({\r\n      name: 'IA',\r\n      hp: 20,\r\n      deck: makeDeck('P2'),\r\n      hand: [],\r\n      field: [],\r\n      energy: 0,\r\n      maxEnergy: 0,\r\n      fatigue: 0,\r\n      warlordUsed: false,\r\n      warlordName: 'Seigneur IA',\r\n    });\r\n    setSelectedAttacker(null);\r\n  setImpactId(null);\r\n  setDamageAnims([]);\r\n  setShake(false);\r\n    setWinner(null);\r\n    setLog([]);\r\n    setTurn('P1');\r\n    setTurnCount(0);\r\n    setTimeout(() => {\r\n      drawCards('P1', 3);\r\n      drawCards('P2', 3);\r\n      startTurn('P1');\r\n    }, 100);\r\n  }\r\n\r\n  const you = p1;\r\n  const enemy = p2;\r\n\r\n  // Barre de navigation\r\n  const Nav = () => (\r\n    <div style={{ display:'flex', gap:8, flexWrap:'wrap', borderTop:'1px solid var(--line)', paddingTop:8, marginTop:12 }}>\r\n      <button className={`week-btn ${screen==='deck'?'primary':''}`} onClick={() => setScreen('deck')}>Créez son deck</button>\r\n      <button className={`week-btn ${screen==='shop'?'primary':''}`} onClick={() => setScreen('shop')}>Boutique (dev)</button>\r\n      <button className={`week-btn ${screen==='home'?'primary':''}`} onClick={() => setScreen('home')}>Home</button>\r\n      <button className={`week-btn ${screen==='event'?'primary':''}`} onClick={() => setScreen('event')}>Event (dev)</button>\r\n      <button className={`week-btn ${screen==='clan'?'primary':''}`} onClick={() => setScreen('clan')}>Clan (dev)</button>\r\n    </div>\r\n  );\r\n\r\n  if (screen !== 'battle') {\r\n    return (\r\n      <div className=\"card\">\r\n        <div style={{ padding: 12 }}>\r\n          {/* Inline styles for damage float and shake (can be moved to CSS file) */}\r\n          <style>{`\r\n            @keyframes cg-float { from { transform: translate(-50%, 0); opacity: 1; } to { transform: translate(-50%, -18px); opacity: 0; } }\r\n            .cg-arena.shake { animation: cg-shake 120ms ease; }\r\n          `}</style>\r\n          <h2 style={{ marginTop: 0 }}>Jeu de cartes</h2>\r\n          <p style={{ color:'var(--muted)', marginTop:-6 }}>Un prototype rapide de combat au tour par tour.</p>\r\n          <div style={{ marginTop: 12 }}>\r\n            <button\r\n              className=\"week-btn primary\"\r\n              onClick={() => {\r\n                // reset partie et lancer combat IA\r\n                if (aiTimerRef.current) {\r\n                  clearTimeout(aiTimerRef.current);\r\n                  aiTimerRef.current = null;\r\n                }\r\n                battleInitRef.current = true; // éviter double init via useEffect\r\n                setScreen('battle');\r\n                // restart() lance une nouvelle partie et démarre le tour P1 automatiquement\r\n                restart();\r\n              }}\r\n            >\r\n              Lancez un combat (IA)\r\n            </button>\r\n          </div>\r\n\r\n          <Nav />\r\n\r\n          {/* Contenus des onglets simples */}\r\n          {screen==='deck' && (\r\n            <div className=\"card\" style={{ marginTop:12 }}>\r\n              <h3 style={{ marginTop:0 }}>Création de deck</h3>\r\n              <p style={{ color:'var(--muted)' }}>À venir: éditeur pour composer votre deck personnalisé.</p>\r\n            </div>\r\n          )}\r\n          {screen==='shop' && (\r\n            <div className=\"card\" style={{ marginTop:12 }}>\r\n              <h3 style={{ marginTop:0 }}>Boutique (dev)</h3>\r\n              <p style={{ color:'var(--muted)' }}>Prototype: packs de cartes, cosmétiques, etc.</p>\r\n            </div>\r\n          )}\r\n          {screen==='event' && (\r\n            <div className=\"card\" style={{ marginTop:12 }}>\r\n              <h3 style={{ marginTop:0 }}>Événements (dev)</h3>\r\n              <p style={{ color:'var(--muted)' }}>Saisons, défis hebdo, classements…</p>\r\n            </div>\r\n          )}\r\n          {screen==='clan' && (\r\n            <div className=\"card\" style={{ marginTop:12 }}>\r\n              <h3 style={{ marginTop:0 }}>Clans (dev)</h3>\r\n              <p style={{ color:'var(--muted)' }}>Rejoignez un clan, missions et bonus coop.</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"cardgame-root\">\r\n      {/* Inline styles present in both views to ensure availability */}\r\n      <style>{`\r\n        @keyframes cg-float { from { transform: translate(-50%, 0); opacity: 1; } to { transform: translate(-50%, -18px); opacity: 0; } }\r\n        .cg-arena.shake { animation: cg-shake 120ms ease; }\r\n        @keyframes cg-shake { 0% { transform: translateX(0); } 25% { transform: translateX(-2px); } 50% { transform: translateX(2px); } 75% { transform: translateX(-2px); } 100% { transform: translateX(0); } }\r\n        /* Ability overlays */\r\n        @keyframes fx-pulse { 0% { opacity: 0.35; } 50% { opacity: 0.9; } 100% { opacity: 0.35; } }\r\n        @keyframes fx-shimmer { 0% { background-position: 0% 50%; } 100% { background-position: 200% 50%; } }\r\n        .fx-taunt { position:absolute; inset:-2px; border:2px solid rgba(255,165,0,0.85); border-radius:8px; box-shadow: 0 0 10px rgba(255,165,0,0.6); animation: fx-pulse 1.2s infinite ease-in-out; pointer-events:none; }\r\n        .fx-shield { position:absolute; inset:-2px; border-radius:8px; border:2px solid rgba(41,128,185,0.9); box-shadow: 0 0 10px rgba(41,128,185,0.6); overflow:hidden; pointer-events:none; }\r\n        .fx-shield::after { content:''; position:absolute; inset:-2px; background: linear-gradient(90deg, rgba(255,255,255,0), rgba(41,128,185,0.25), rgba(255,255,255,0)); background-size: 200% 100%; animation: fx-shimmer 1.2s linear infinite; }\r\n        .fx-charge { position:absolute; inset:-2px; border-radius:8px; box-shadow: inset 0 0 10px rgba(231,76,60,0.6); animation: fx-pulse 0.9s infinite ease-in-out; pointer-events:none; }\r\n        .fx-life { position:absolute; bottom:-2px; left:-2px; right:-2px; height:4px; border-radius:0 0 8px 8px; background: rgba(46,204,113,0.9); animation: fx-pulse 1.5s infinite ease-in-out; pointer-events:none; }\r\n        /* Explosion FX */\r\n        @keyframes fx-boom { 0% { transform: scale(0.5); opacity: 0.9; } 60% { transform: scale(1.25); opacity: 0.7; } 100% { transform: scale(1.6); opacity: 0; } }\r\n        .fx-explosion { position:absolute; inset:-6px; border-radius:10px; pointer-events:none; background: radial-gradient(circle, rgba(255,200,80,0.95) 0%, rgba(255,120,0,0.55) 35%, rgba(255,0,0,0.3) 60%, rgba(255,0,0,0) 70%); animation: fx-boom 0.9s ease-out forwards; box-shadow: 0 0 30px rgba(255,120,0,0.7), 0 0 60px rgba(255,80,0,0.45); }\r\n        .fx-explosion::after { content:''; position:absolute; inset:0; border-radius:10px; box-shadow: 0 0 0 2px rgba(255,255,255,0.35) inset; }\r\n      `}</style>\r\n      <div className=\"cg-top\">\r\n        <PlayerBoard\r\n          player={enemy}\r\n          isSelf={false}\r\n          turn={turn}\r\n          onCardClick={() => {}}\r\n          selectable={false}\r\n          highlightAttacker={null}\r\n        />\r\n      </div>\r\n\r\n      <Arena\r\n        p1Field={you.field}\r\n        p2Field={enemy.field}\r\n        p1Hp={you.hp}\r\n        p2Hp={enemy.hp}\r\n        p1WarlordUsed={you.warlordUsed}\r\n        attackAnim={attackAnim}\r\n        impactId={impactId}\r\n        damageAnims={damageAnims}\r\n        shake={shake}\r\n        projectile={projectile}\r\n        warlordExplosion={warlordExplosion}\r\n  turn={turn}\r\n  pendingPlayUid={pendingPlayUid}\r\n  onPlaceAt={placePendingAt}\r\n        selectedAttacker={selectedAttacker}\r\n        onSelectAttacker={(card) => clickFieldCard(card, 'P1')}\r\n        onSelectWarlord={() => {\r\n          if (turn !== 'P1' || you.warlordUsed) return;\r\n          if (selectedAttacker?.isWarlord) setSelectedAttacker(null);\r\n          else setSelectedAttacker({ uid: 'WARLORD_P1', isWarlord: true, atk: WARLORD_ATK, canAttack: true });\r\n        }}\r\n        onWarlordAbility={() => activateWarlordAbility('P1')}\r\n        onAttackCard={(defUid) => {\r\n          if (!selectedAttacker) return;\r\n          // Règle de Provocation: si une provocation est en face, il faut la cibler\r\n          const enemyHasTaunt = enemy.field.some(c => c.taunt);\r\n          const target = enemy.field.find(c => c.uid === defUid);\r\n          if (enemyHasTaunt && target && !target.taunt) {\r\n            appendLog(`[Règle] Vous devez cibler une créature avec Provocation.`);\r\n            return;\r\n          }\r\n          if (selectedAttacker.isWarlord) runAttack('P1','warlord','WARLORD_P1','creature', defUid);\r\n          else runAttack('P1','creature', selectedAttacker.uid,'creature', defUid);\r\n          setSelectedAttacker(null);\r\n        }}\r\n        onAttackWarlord={() => {\r\n          if (!selectedAttacker) return;\r\n          const enemyHasTaunt = enemy.field.some(c => c.taunt);\r\n          if (enemyHasTaunt) { appendLog(`[Règle] Une Provocation bloque le Seigneur.`); return; }\r\n          if (selectedAttacker.isWarlord) runAttack('P1','warlord','WARLORD_P1','warlord');\r\n          else runAttack('P1','creature', selectedAttacker.uid,'warlord');\r\n          setSelectedAttacker(null);\r\n        }}\r\n      />\r\n\r\n      <div className=\"cg-hand-area\">\r\n        <PlayerBoard\r\n          player={you}\r\n          isSelf\r\n          turn={turn}\r\n          onCardClick={chooseCardToPlay}\r\n          selectable\r\n          highlightAttacker={selectedAttacker?.uid}\r\n          onAttackPlayer={() => {}}\r\n        />\r\n        {/* Choix du côté d'invocation */}\r\n        <div style={{ marginTop:8, display:'flex', gap:8, alignItems:'center' }}>\r\n          <span style={{ fontSize:12, color:'var(--muted)' }}>Placement:</span>\r\n          <button className={`week-btn ${placeSide==='left'?'primary':''}`} onClick={() => setPlaceSide('left')}>Gauche</button>\r\n          <button className={`week-btn ${placeSide==='right'?'primary':''}`} onClick={() => setPlaceSide('right')}>Droite</button>\r\n          <span style={{ fontSize:12, color:'var(--muted)' }}>Limite: {you.field.length}/8</span>\r\n        </div>\r\n  </div>\r\n      <div className=\"cg-sidebar\">\r\n        <div className=\"cg-panel\">\r\n          <h3 style={{ margin: '0 0 6px' }}>Statut</h3>\r\n          <div>Tour: {turn === 'P1' ? 'Vous' : 'IA'} (#{turnCount})</div>\r\n          <div>Votre PV: {you.hp}</div>\r\n          <div>IA PV: {enemy.hp}</div>\r\n          <div>Énergie: {you.energy}/{you.maxEnergy}</div>\r\n          <div>Deck: {you.deck.length}</div>\r\n          <div>IA Deck: {enemy.deck.length}</div>\r\n          <div style={{ marginTop: 8, display:'flex', gap:10, alignItems:'center' }}>\r\n            {/* Bouton Fin de tour avec anneau de progression */}\r\n            <div\r\n              style={{ position:'relative', width:64, height:64, flex:'0 0 auto' }}\r\n              title={turnEndsAt ? `${Math.max(0, Math.ceil((turnEndsAt - Date.now())/1000))}s restantes` : ''}\r\n            >\r\n              <div style={{\r\n                position:'absolute', inset:0, borderRadius:'50%',\r\n                background:`conic-gradient(var(--accent) ${Math.round((turnProgress||0)*360)}deg, rgba(0,0,0,0.1) 0deg)`\r\n              }} />\r\n              <div style={{ position:'absolute', inset:6, borderRadius:'50%', background:'var(--card)' }} />\r\n              <button\r\n                className=\"week-btn\"\r\n                disabled={winner || turn !== 'P1'}\r\n                onClick={endTurn}\r\n                style={{ position:'absolute', inset:12, borderRadius:'50%', width:'auto', height:'auto', padding:'6px 8px' }}\r\n              >\r\n                Fin\r\n              </button>\r\n              {/* Count-down texte */}\r\n              {turnEndsAt && (\r\n                <div style={{ position:'absolute', inset:0, display:'flex', alignItems:'center', justifyContent:'center', pointerEvents:'none', fontSize:12, fontWeight:600, color:'var(--muted)' }}>\r\n                  {Math.max(0, Math.ceil((turnEndsAt - Date.now())/1000))}s\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div style={{ fontSize:12, color:'var(--muted)' }}>\r\n              {turn === 'P1' ? 'Votre tour' : 'Tour IA'}\r\n            </div>\r\n            <button className=\"week-btn\" onClick={restart}>Rejouer</button>\r\n          </div>\r\n          {winner && <div style={{ marginTop: 8, fontWeight: 600 }}>Victoire: {winner}</div>}\r\n        </div>\r\n        <div className=\"cg-panel\">\r\n          <h4 style={{ margin: '0 0 6px' }}>Capacités</h4>\r\n          <ul style={{ paddingLeft: 16, margin: 0, fontSize: 12, lineHeight: 1.5 }}>\r\n            <li><strong>Provocation</strong>: doit être attaquée en priorité. Empêche d'attaquer le héros.</li>\r\n            <li><strong>Charge</strong>: peut attaquer le tour où elle est invoquée.</li>\r\n            <li><strong>Bouclier</strong>: ignore la prochaine source de dégâts reçus.</li>\r\n            <li><strong>Vol de vie</strong>: soigne votre héros à hauteur des dégâts infligés.</li>\r\n            <li><strong>Fatigue</strong>: piocher sans cartes inflige des dégâts croissants.</li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"cg-panel\" style={{ maxHeight: 240, overflowY:'auto' }}>\r\n          <h4 style={{ margin: '0 0 6px' }}>Journal</h4>\r\n          <ul style={{ listStyle:'none', padding:0, margin:0, fontSize:12 }}>\r\n            {log.map((l,i) => <li key={i} style={{ marginBottom:2 }}>{l}</li>)}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      {/* Nav masquée pendant le combat */}\r\n      {winner && (\r\n        <div style={{ position:'fixed', inset:0, background:'rgba(0,0,0,0.65)', display:'flex', alignItems:'center', justifyContent:'center', zIndex:9999 }}>\r\n          <div className=\"card\" style={{ padding:24, textAlign:'center', minWidth:280 }}>\r\n            <h2 style={{ marginTop:0 }}>{winner === 'Égalité' ? 'Égalité' : `Victoire: ${winner}`}</h2>\r\n            <div style={{ marginTop:12 }}>\r\n              <button className=\"week-btn primary\" onClick={restart}>Rejouer</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction PlayerBoard({ player, isSelf, onCardClick, selectable, highlightAttacker, onAttackPlayer }) {\r\n  const cardStyle = (c) => {\r\n    // Glow based on abilities\r\n    let boxShadow = '0 1px 3px rgba(0,0,0,0.25)';\r\n    if (c.taunt) boxShadow += ', 0 0 8px rgba(255,165,0,0.45)'; // orange\r\n    if (c.shield) boxShadow += ', 0 0 8px rgba(52,152,219,0.45)'; // blue\r\n    if (c.lifesteal) boxShadow += ', 0 0 8px rgba(46,204,113,0.45)'; // green\r\n    if (c.charge) boxShadow += ', 0 0 8px rgba(231,76,60,0.45)'; // red\r\n    return { boxShadow, transition:'transform 120ms ease, box-shadow 200ms ease' };\r\n  };\r\n  return (\r\n    <div className={`cg-player ${isSelf ? 'self' : 'opp'}`}>\r\n      <div className=\"cg-player-header\">\r\n        <strong>{player.name}</strong> — PV {player.hp} — Énergie {player.energy}/{player.maxEnergy}\r\n      </div>\r\n      <div className=\"cg-hand\">\r\n        {player.hand.map(c => (\r\n          <div\r\n            key={c.uid}\r\n            className=\"cg-card small\"\r\n            title={`${c.name}\\nCoût:${c.cost} ATK:${c.atk} PV:${c.hp}`}\r\n            onClick={() => selectable && isSelf && onCardClick(c.uid)}\r\n            style={{ ...cardStyle(c), position:'relative' }}\r\n          >\r\n            <div className=\"cg-cost\">{c.cost}</div>\r\n            <div className=\"cg-name\">{c.name}</div>\r\n            <div style={{ fontSize:9, color:'var(--muted)' }}>{(c.categories||[]).join('/')}</div>\r\n            {c.effect && <div style={{ fontSize:10, color:'var(--accent)' }}>{c.effect}</div>}\r\n            <div style={{ display:'flex', gap:4, flexWrap:'wrap', fontSize:10, marginTop:2 }}>\r\n              {c.taunt && <span style={{ padding:'0 4px', border:'1px solid #999', borderRadius:3 }}>Prov</span>}\r\n              {c.charge && <span style={{ padding:'0 4px', border:'1px solid #999', borderRadius:3 }}>Charge</span>}\r\n              {c.shield && <span style={{ padding:'0 4px', border:'1px solid #999', borderRadius:3 }}>Bouclier</span>}\r\n              {c.lifesteal && <span style={{ padding:'0 4px', border:'1px solid #999', borderRadius:3 }}>Vol</span>}\r\n            </div>\r\n            <div style={{ position:'absolute', left:6, bottom:6, padding:'1px 4px', borderRadius:4, background:'rgba(0,0,0,0.35)', fontSize:11, fontWeight:700 }}>{c.atk}</div>\r\n            <div style={{ position:'absolute', right:6, bottom:6, padding:'1px 4px', borderRadius:4, background:'rgba(0,0,0,0.35)', fontSize:11, fontWeight:700 }}>{c.hp}</div>\r\n          </div>\r\n        ))}\r\n        {!player.hand.length && <div style={{ color:'var(--muted)', fontSize:12 }}>Main vide</div>}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Arena({ p1Field, p2Field, p1Hp, p2Hp, p1WarlordUsed, selectedAttacker, onSelectAttacker, onSelectWarlord, onAttackCard, onAttackWarlord, onWarlordAbility, turn, attackAnim, impactId, damageAnims, shake, projectile, pendingPlayUid, onPlaceAt, warlordExplosion }) {\r\n  const cardStyle = (c) => {\r\n    let boxShadow = '0 1px 3px rgba(0,0,0,0.25)';\r\n    if (c.taunt) boxShadow += ', 0 0 8px rgba(255,165,0,0.45)';\r\n    if (c.shield) boxShadow += ', 0 0 8px rgba(52,152,219,0.45)';\r\n    if (c.lifesteal) boxShadow += ', 0 0 8px rgba(46,204,113,0.45)';\r\n    if (c.charge) boxShadow += ', 0 0 8px rgba(231,76,60,0.45)';\r\n    return { boxShadow, transition:'transform 160ms ease, box-shadow 200ms ease' };\r\n  };\r\n  return (\r\n    <div className={`cg-arena${shake ? ' shake' : ''}`}>\r\n      {/* projectile simple */}\r\n      {projectile && (\r\n        <AimLine fromId={projectile.fromId} toId={projectile.toId} />\r\n      )}\r\n      <div className=\"cg-row opp\">\r\n        {(() => {\r\n          // build slots for opponent (0..7)\r\n          const slots = Array(8).fill(null);\r\n          let fb = 0;\r\n          for (const u of p2Field) {\r\n            let idx = Number.isInteger(u.slot) ? u.slot : fb++;\r\n            if (idx < 0) idx = 0; if (idx > 7) idx = 7;\r\n            while (idx <= 7 && slots[idx]) idx++;\r\n            if (idx <= 7) slots[idx] = u;\r\n          }\r\n          return Array.from({ length: 4 }).map((_, i) => {\r\n            const c = slots[i];\r\n          return (\r\n            <div\r\n              key={c ? c.uid : `slot-op-${i}`}\r\n              className=\"cg-card\"\r\n              title={c ? `${c.name}\\nATK:${c.atk} PV:${c.hp}` : `Emplacement ${i+1}`}\r\n              onClick={() => selectedAttacker && c && onAttackCard(c.uid)}\r\n              style={{\r\n                ...cardStyle(c||{}), position:'relative',\r\n                transform: attackAnim && c && attackAnim.attackerId === c.uid && attackAnim.attackerOwner==='P2' ? 'translateY(18px)' : undefined,\r\n              }}\r\n              data-cg-id={c ? c.uid : undefined}\r\n            >\r\n              {c ? (\r\n                <>\r\n                  <div className=\"cg-name\">{c.name}</div>\r\n                  <div style={{ fontSize:10, color:'var(--muted)' }}>{(c.categories||[]).join('/')}</div>\r\n                  {c.effect && <div style={{ fontSize:10, color:'var(--accent)' }}>{c.effect}</div>}\r\n                  <div style={{ display:'flex', gap:4, flexWrap:'wrap', fontSize:10, marginTop:2 }}>\r\n                    {c.taunt && <span style={{ padding:'0 4px', border:'1px solid #999', borderRadius:3 }}>Prov</span>}\r\n                    {c.shield && <span style={{ padding:'0 4px', border:'1px solid #999', borderRadius:3 }}>Bouclier</span>}\r\n                    {c.charge && <span style={{ padding:'0 4px', border:'1px solid #999', borderRadius:3 }}>Charge</span>}\r\n                    {c.lifesteal && <span style={{ padding:'0 4px', border:'1px solid #999', borderRadius:3 }}>Vol</span>}\r\n                  </div>\r\n                  <div style={{ position:'absolute', left:6, bottom:6, padding:'2px 6px', borderRadius:4, background:'rgba(0,0,0,0.35)', fontSize:12, fontWeight:700 }}>{c.atk}</div>\r\n                  <div style={{ position:'absolute', right:6, bottom:6, padding:'2px 6px', borderRadius:4, background:'rgba(0,0,0,0.35)', fontSize:12, fontWeight:700 }}>{c.hp}</div>\r\n                </>\r\n              ) : (\r\n                <div style={{ opacity:0.35, fontSize:10, color:'var(--muted)' }}>Vide</div>\r\n              )}\r\n              {c && impactId === c.uid && (\r\n                <div style={{ position:'absolute', inset:0, borderRadius:8, background: c.shield ? 'rgba(80,160,255,0.35)' : 'rgba(255,255,255,0.35)', filter:'blur(1px)' }} />\r\n              )}\r\n              {c && damageAnims.filter(d => d.id === c.uid).map(d => (\r\n                <div key={d.key} style={{ position:'absolute', top:-10, left:'50%', transform:'translateX(-50%)', color:'#e74c3c', fontWeight:800, textShadow:'0 0 2px #000', animation:'cg-float 0.7s ease-out forwards' }}>-{d.amount}</div>\r\n              ))}\r\n              {c && c.taunt && <div className=\"fx-taunt\" />}\r\n              {c && c.shield && <div className=\"fx-shield\" />}\r\n              {c && c.charge && <div className=\"fx-charge\" />}\r\n              {c && c.lifesteal && <div className=\"fx-life\" />}\r\n            </div>\r\n          );\r\n          });\r\n        })()}\r\n        {/* Warlord Opp au milieu */}\r\n        <div className=\"cg-card warlord\" title={`Seigneur\\nATK:${WARLORD_ATK} PV:${p2Hp}`} onClick={() => selectedAttacker && onAttackWarlord && onAttackWarlord()} style={{ position:'relative' }} data-cg-id=\"WARLORD_P2\">\r\n          {p2Hp > 0 && <div className=\"cg-name\">Seigneur</div>}\r\n          {p2Hp > 0 && <div style={{ position:'absolute', left:6, bottom:6, padding:'2px 6px', borderRadius:4, background:'rgba(0,0,0,0.35)', fontSize:12, fontWeight:700 }}>{WARLORD_ATK}</div>}\r\n          {p2Hp > 0 && <div style={{ position:'absolute', right:6, bottom:6, padding:'2px 6px', borderRadius:4, background:'rgba(0,0,0,0.35)', fontSize:12, fontWeight:700 }}>{p2Hp}</div>}\r\n          {impactId === 'WARLORD_P2' && (\r\n            <div style={{ position:'absolute', inset:0, borderRadius:8, background:'rgba(255,255,255,0.35)', filter:'blur(1px)' }} />\r\n          )}\r\n          {damageAnims.filter(d => d.id === 'WARLORD_P2').map(d => (\r\n            <div key={d.key} style={{ position:'absolute', top:-10, left:'50%', transform:'translateX(-50%)', color:'#e74c3c', fontWeight:800, textShadow:'0 0 2px #000', animation:'cg-float 0.7s ease-out forwards' }}>-{d.amount}</div>\r\n          ))}\r\n          {warlordExplosion === 'WARLORD_P2' && <div className=\"fx-explosion\" />}\r\n        </div>\r\n        {(() => {\r\n          const slots = Array(8).fill(null);\r\n          let fb = 0;\r\n          for (const u of p2Field) {\r\n            let idx = Number.isInteger(u.slot) ? u.slot : fb++;\r\n            if (idx < 0) idx = 0; if (idx > 7) idx = 7;\r\n            while (idx <= 7 && slots[idx]) idx++;\r\n            if (idx <= 7) slots[idx] = u;\r\n          }\r\n          return Array.from({ length: 4 }).map((_, idx) => {\r\n            const i = 4 + idx; // 4..7\r\n            const c = slots[i];\r\n          return (\r\n            <div\r\n              key={c ? c.uid : `slot-op-${i}`}\r\n              className=\"cg-card\"\r\n              title={c ? `${c.name}\\nATK:${c.atk} PV:${c.hp}` : `Emplacement ${i+1}`}\r\n              onClick={() => selectedAttacker && c && onAttackCard(c.uid)}\r\n              style={{\r\n                ...cardStyle(c||{}), position:'relative',\r\n                transform: attackAnim && c && attackAnim.attackerId === c.uid && attackAnim.attackerOwner==='P2' ? 'translateY(18px)' : undefined,\r\n              }}\r\n              data-cg-id={c ? c.uid : undefined}\r\n            >\r\n              {c ? (\r\n                <>\r\n                  <div className=\"cg-name\">{c.name}</div>\r\n                  <div style={{ fontSize:10, color:'var(--muted)' }}>{(c.categories||[]).join('/')}</div>\r\n                  {c.effect && <div style={{ fontSize:10, color:'var(--accent)' }}>{c.effect}</div>}\r\n                  <div style={{ display:'flex', gap:4, flexWrap:'wrap', fontSize:10, marginTop:2 }}>\r\n                    {c.taunt && <span style={{ padding:'0 4px', border:'1px solid #999', borderRadius:3 }}>Prov</span>}\r\n                    {c.shield && <span style={{ padding:'0 4px', border:'1px solid #999', borderRadius:3 }}>Bouclier</span>}\r\n                    {c.charge && <span style={{ padding:'0 4px', border:'1px solid #999', borderRadius:3 }}>Charge</span>}\r\n                    {c.lifesteal && <span style={{ padding:'0 4px', border:'1px solid #999', borderRadius:3 }}>Vol</span>}\r\n                  </div>\r\n                  <div style={{ position:'absolute', left:6, bottom:6, padding:'2px 6px', borderRadius:4, background:'rgba(0,0,0,0.35)', fontSize:12, fontWeight:700 }}>{c.atk}</div>\r\n                  <div style={{ position:'absolute', right:6, bottom:6, padding:'2px 6px', borderRadius:4, background:'rgba(0,0,0,0.35)', fontSize:12, fontWeight:700 }}>{c.hp}</div>\r\n                </>\r\n              ) : (\r\n                <div style={{ opacity:0.35, fontSize:10, color:'var(--muted)' }}>Vide</div>\r\n              )}\r\n              {c && impactId === c.uid && (\r\n                <div style={{ position:'absolute', inset:0, borderRadius:8, background: c.shield ? 'rgba(80,160,255,0.35)' : 'rgba(255,255,255,0.35)', filter:'blur(1px)' }} />\r\n              )}\r\n              {c && damageAnims.filter(d => d.id === c.uid).map(d => (\r\n                <div key={d.key} style={{ position:'absolute', top:-10, left:'50%', transform:'translateX(-50%)', color:'#e74c3c', fontWeight:800, textShadow:'0 0 2px #000', animation:'cg-float 0.7s ease-out forwards' }}>-{d.amount}</div>\r\n              ))}\r\n              {c && c.taunt && <div className=\"fx-taunt\" />}\r\n              {c && c.shield && <div className=\"fx-shield\" />}\r\n              {c && c.charge && <div className=\"fx-charge\" />}\r\n              {c && c.lifesteal && <div className=\"fx-life\" />}\r\n            </div>\r\n          );\r\n          });\r\n        })()}\r\n      </div>\r\n      <div className=\"cg-row self\">\r\n        {(() => {\r\n          const slots = Array(8).fill(null);\r\n          let fb = 0;\r\n          for (const u of p1Field) {\r\n            let idx = Number.isInteger(u.slot) ? u.slot : fb++;\r\n            if (idx < 0) idx = 0; if (idx > 7) idx = 7;\r\n            while (idx <= 7 && slots[idx]) idx++;\r\n            if (idx <= 7) slots[idx] = u;\r\n          }\r\n          return Array.from({ length: 4 }).map((_, i) => {\r\n            const c = slots[i];\r\n          const selected = !!(selectedAttacker && c && selectedAttacker.uid === c.uid);\r\n          const can = c && c.canAttack && turn === 'P1';\r\n          return (\r\n            <div\r\n              key={c ? c.uid : `slot-you-${i}`}\r\n              className={`cg-card ${selected ? 'selected' : ''} ${can ? 'can-attack' : ''}`}\r\n              title={c ? `${c.name}\\nATK:${c.atk} PV:${c.hp}${c.canAttack ? '' : '\\n(ne peut pas attaquer)'}` : `Emplacement ${i+1}`}\r\n              onClick={() => {\r\n                if (pendingPlayUid != null) { onPlaceAt && onPlaceAt(i); return; }\r\n                if (c && can) onSelectAttacker(c);\r\n              }}\r\n              style={{\r\n                ...cardStyle(c||{}), position:'relative',\r\n                transform: attackAnim && c && attackAnim.attackerId === c.uid && attackAnim.attackerOwner==='P1' ? 'translateY(-18px)' : undefined,\r\n              }}\r\n              data-cg-id={c ? c.uid : undefined}\r\n            >\r\n              {c ? (\r\n                <>\r\n                  <div className=\"cg-name\">{c.name}</div>\r\n                  <div style={{ fontSize:10, color:'var(--muted)' }}>{(c.categories||[]).join('/')}</div>\r\n                  {c.effect && <div style={{ fontSize:10, color:'var(--accent)' }}>{c.effect}</div>}\r\n                  <div style={{ display:'flex', gap:4, flexWrap:'wrap', fontSize:10, marginTop:2 }}>\r\n                    {c.taunt && <span style={{ padding:'0 4px', border:'1px solid #999', borderRadius:3 }}>Prov</span>}\r\n                    {c.shield && <span style={{ padding:'0 4px', border:'1px solid #999', borderRadius:3 }}>Bouclier</span>}\r\n                    {c.charge && <span style={{ padding:'0 4px', border:'1px solid #999', borderRadius:3 }}>Charge</span>}\r\n                    {c.lifesteal && <span style={{ padding:'0 4px', border:'1px solid #999', borderRadius:3 }}>Vol</span>}\r\n                  </div>\r\n                  <div style={{ position:'absolute', left:6, bottom:6, padding:'2px 6px', borderRadius:4, background:'rgba(0,0,0,0.35)', fontSize:12, fontWeight:700 }}>{c.atk}</div>\r\n                  <div style={{ position:'absolute', right:6, bottom:6, padding:'2px 6px', borderRadius:4, background:'rgba(0,0,0,0.35)', fontSize:12, fontWeight:700 }}>{c.hp}</div>\r\n                </>\r\n              ) : (\r\n                <div style={{ opacity: pendingPlayUid? 0.8: 0.25, border:'1px dashed var(--line)', borderRadius:8, width:'100%', height:'100%' }} />\r\n              )}\r\n              {c && impactId === c.uid && (\r\n                <div style={{ position:'absolute', inset:0, borderRadius:8, background: c.shield ? 'rgba(80,160,255,0.35)' : 'rgba(255,255,255,0.35)', filter:'blur(1px)' }} />\r\n              )}\r\n              {c && damageAnims.filter(d => d.id === c.uid).map(d => (\r\n                <div key={d.key} style={{ position:'absolute', top:-10, left:'50%', transform:'translateX(-50%)', color:'#e74c3c', fontWeight:800, textShadow:'0 0 2px #000', animation:'cg-float 0.7s ease-out forwards' }}>-{d.amount}</div>\r\n              ))}\r\n              {c && c.taunt && <div className=\"fx-taunt\" />}\r\n              {c && c.shield && <div className=\"fx-shield\" />}\r\n              {c && c.charge && <div className=\"fx-charge\" />}\r\n              {c && c.lifesteal && <div className=\"fx-life\" />}\r\n              {/* overlay click hint */}\r\n              {pendingPlayUid != null && (\r\n                <div style={{ position:'absolute', inset:0, borderRadius:8, boxShadow:'inset 0 0 0 2px rgba(255,255,255,0.25)', background:'rgba(255,255,255,0.06)' }} />\r\n              )}\r\n            </div>\r\n          );\r\n          });\r\n        })()}\r\n        {/* Warlord Self au milieu */}\r\n        {(() => {\r\n          const isSelected = selectedAttacker && selectedAttacker.isWarlord;\r\n          const can = turn === 'P1' && !p1WarlordUsed;\r\n          const canSkill = turn === 'P1' && !p1WarlordUsed;\r\n          return (\r\n            <div\r\n              className={`cg-card warlord ${isSelected ? 'selected' : ''} ${can ? 'can-attack' : ''}`}\r\n              title={`Seigneur\\nATK:${WARLORD_ATK} PV:${p1Hp}${can ? '' : '\\n(déjà utilisé)'}`}\r\n              onClick={() => can && onSelectWarlord && onSelectWarlord()}\r\n              style={{ position:'relative' }}\r\n              data-cg-id=\"WARLORD_P1\"\r\n            >\r\n              {p1Hp > 0 && <div className=\"cg-name\">Seigneur</div>}\r\n              {p1Hp > 0 && <div style={{ position:'absolute', left:6, bottom:6, padding:'2px 6px', borderRadius:4, background:'rgba(0,0,0,0.35)', fontSize:12, fontWeight:700 }}>{WARLORD_ATK}</div>}\r\n              {p1Hp > 0 && <div style={{ position:'absolute', right:6, bottom:6, padding:'2px 6px', borderRadius:4, background:'rgba(0,0,0,0.35)', fontSize:12, fontWeight:700 }}>{p1Hp}</div>}\r\n              {impactId === 'WARLORD_P1' && (\r\n                <div style={{ position:'absolute', inset:0, borderRadius:8, background:'rgba(255,255,255,0.35)', filter:'blur(1px)' }} />\r\n              )}\r\n              {damageAnims.filter(d => d.id === 'WARLORD_P1').map(d => (\r\n                <div key={d.key} style={{ position:'absolute', top:-10, left:'50%', transform:'translateX(-50%)', color:'#e74c3c', fontWeight:800, textShadow:'0 0 2px #000', animation:'cg-float 0.7s ease-out forwards' }}>-{d.amount}</div>\r\n              ))}\r\n              {/* Bouton capacité Seigneur: 1e → pioche 1 */}\r\n              <button\r\n                className=\"week-btn\"\r\n                style={{ position:'absolute', right:4, bottom:4, padding:'2px 6px', fontSize:10 }}\r\n                disabled={!canSkill}\r\n                onClick={(e) => { e.stopPropagation(); onWarlordAbility && onWarlordAbility(); }}\r\n                title=\"Capacité: 1 énergie → pioche 1\"\r\n              >1e: Tirer</button>\r\n              {warlordExplosion === 'WARLORD_P1' && <div className=\"fx-explosion\" />}\r\n            </div>\r\n          );\r\n        })()}\r\n        {(() => {\r\n          const slots = Array(8).fill(null);\r\n          let fb = 0;\r\n          for (const u of p1Field) {\r\n            let idx = Number.isInteger(u.slot) ? u.slot : fb++;\r\n            if (idx < 0) idx = 0; if (idx > 7) idx = 7;\r\n            while (idx <= 7 && slots[idx]) idx++;\r\n            if (idx <= 7) slots[idx] = u;\r\n          }\r\n          return Array.from({ length: 4 }).map((_, idx) => {\r\n            const i = 4 + idx; // 4..7\r\n            const c = slots[i];\r\n          const selected = !!(selectedAttacker && c && selectedAttacker.uid === c.uid);\r\n          const can = c && c.canAttack && turn === 'P1';\r\n          return (\r\n            <div\r\n              key={c ? c.uid : `slot-you-${i}`}\r\n              className={`cg-card ${selected ? 'selected' : ''} ${can ? 'can-attack' : ''}`}\r\n              title={c ? `${c.name}\\nATK:${c.atk} PV:${c.hp}${c.canAttack ? '' : '\\n(ne peut pas attaquer)'}` : `Emplacement ${i+1}`}\r\n              onClick={() => {\r\n                if (pendingPlayUid != null) { onPlaceAt && onPlaceAt(i); return; }\r\n                if (c && can) onSelectAttacker(c);\r\n              }}\r\n              style={{\r\n                ...cardStyle(c||{}), position:'relative',\r\n                transform: attackAnim && c && attackAnim.attackerId === c.uid && attackAnim.attackerOwner==='P1' ? 'translateY(-18px)' : undefined,\r\n              }}\r\n              data-cg-id={c ? c.uid : undefined}\r\n            >\r\n              {c ? (\r\n                <>\r\n                  <div className=\"cg-name\">{c.name}</div>\r\n                  <div style={{ fontSize:10, color:'var(--muted)' }}>{(c.categories||[]).join('/')}</div>\r\n                  {c.effect && <div style={{ fontSize:10, color:'var(--accent)' }}>{c.effect}</div>}\r\n                  <div style={{ display:'flex', gap:4, flexWrap:'wrap', fontSize:10, marginTop:2 }}>\r\n                    {c.taunt && <span style={{ padding:'0 4px', border:'1px solid #999', borderRadius:3 }}>Prov</span>}\r\n                    {c.shield && <span style={{ padding:'0 4px', border:'1px solid #999', borderRadius:3 }}>Bouclier</span>}\r\n                    {c.charge && <span style={{ padding:'0 4px', border:'1px solid #999', borderRadius:3 }}>Charge</span>}\r\n                    {c.lifesteal && <span style={{ padding:'0 4px', border:'1px solid #999', borderRadius:3 }}>Vol</span>}\r\n                  </div>\r\n                  <div style={{ position:'absolute', left:6, bottom:6, padding:'2px 6px', borderRadius:4, background:'rgba(0,0,0,0.35)', fontSize:12, fontWeight:700 }}>{c.atk}</div>\r\n                  <div style={{ position:'absolute', right:6, bottom:6, padding:'2px 6px', borderRadius:4, background:'rgba(0,0,0,0.35)', fontSize:12, fontWeight:700 }}>{c.hp}</div>\r\n                </>\r\n              ) : (\r\n                <div style={{ opacity: pendingPlayUid? 0.8: 0.25, border:'1px dashed var(--line)', borderRadius:8, width:'100%', height:'100%' }} />\r\n              )}\r\n              {c && impactId === c.uid && (\r\n                <div style={{ position:'absolute', inset:0, borderRadius:8, background: c.shield ? 'rgba(80,160,255,0.35)' : 'rgba(255,255,255,0.35)', filter:'blur(1px)' }} />\r\n              )}\r\n              {c && damageAnims.filter(d => d.id === c.uid).map(d => (\r\n                <div key={d.key} style={{ position:'absolute', top:-10, left:'50%', transform:'translateX(-50%)', color:'#e74c3c', fontWeight:800, textShadow:'0 0 2px #000', animation:'cg-float 0.7s ease-out forwards' }}>-{d.amount}</div>\r\n              ))}\r\n              {c && c.taunt && <div className=\"fx-taunt\" />}\r\n              {c && c.shield && <div className=\"fx-shield\" />}\r\n              {c && c.charge && <div className=\"fx-charge\" />}\r\n              {c && c.lifesteal && <div className=\"fx-life\" />}\r\n              {pendingPlayUid != null && (\r\n                <div style={{ position:'absolute', inset:0, borderRadius:8, boxShadow:'inset 0 0 0 2px rgba(255,255,255,0.25)', background:'rgba(255,255,255,0.06)' }} />\r\n              )}\r\n            </div>\r\n          );\r\n          });\r\n        })()}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction AimLine({ fromId, toId }) {\r\n  const [style, setStyle] = React.useState(null);\r\n  React.useEffect(() => {\r\n    if (!fromId || !toId) return;\r\n    const fromEl = document.querySelector(`[data-cg-id=\"${CSS.escape(fromId)}\"]`);\r\n    const toEl = document.querySelector(`[data-cg-id=\"${CSS.escape(toId)}\"]`);\r\n    if (!fromEl || !toEl) return;\r\n    const fb = fromEl.getBoundingClientRect();\r\n    const tb = toEl.getBoundingClientRect();\r\n    const sx = fb.left + fb.width/2; const sy = fb.top + fb.height/2;\r\n    const ex = tb.left + tb.width/2; const ey = tb.top + tb.height/2;\r\n    const dx = ex - sx; const dy = ey - sy;\r\n    const len = Math.hypot(dx, dy);\r\n    const ang = Math.atan2(dy, dx) * 180 / Math.PI;\r\n    const x = sx; const y = sy;\r\n    setStyle({ position:'fixed', left:x, top:y, width:len, height:3, transform:`rotate(${ang}deg)`, transformOrigin:'0 50%', background:'linear-gradient(90deg, rgba(255,255,255,0.0), rgba(255,255,255,0.8), rgba(255,255,255,0.0))', pointerEvents:'none', borderRadius:2 });\r\n    const id = setTimeout(() => setStyle(null), 250);\r\n    return () => clearTimeout(id);\r\n  }, [fromId, toId]);\r\n  if (!style) return null;\r\n  return <div style={style} />;\r\n}"],"names":["WARLORD_ATK","makeDeck","seedOwner","base","id","name","cost","atk","hp","categories","faction","effect","charge","taunt","shield","lifesteal","deck","i","forEach","c","push","_objectSpread","uid","Math","random","toString","slice","length","j","floor","CardBattle","screen","setScreen","useState","aiTimerRef","useRef","aiTimeoutsRef","battleInitRef","turnTimerRef","progressTickRef","turnEndsAt","setTurnEndsAt","turnProgress","setTurnProgress","p1","setP1","hand","field","energy","maxEnergy","fatigue","warlordUsed","warlordName","p2","setP2","turn","setTurn","log","setLog","selectedAttacker","setSelectedAttacker","winner","setWinner","turnCount","setTurnCount","attackAnim","setAttackAnim","impactId","setImpactId","damageAnims","setDamageAnims","shake","setShake","projectile","setProjectile","placeSide","setPlaceSide","pendingPlayUid","setPendingPlayUid","warlordExplosion","setWarlordExplosion","p1Ref","p2Ref","turnRef","winnerRef","clearAllAiTimeouts","current","clearTimeout","scheduleAiTimeout","cb","delay","setTimeout","stopAllTimers","clearInterval","appendLog","text","l","mutatePlayer","fn","p","np","getPlayer","getPlayerNow","getTurnNow","getWinnerNow","opponent","drawCards","pid","n","arguments","undefined","pp","available","drawCount","min","missing","baseFatigue","totalDmg","drawn","splice","concat","checkWinner","activateWarlordAbility","owner","s","startTurn","map","canAttack","endsAt","Date","now","round","setInterval","prev","left","max","endTurnSafe","ai","scoreCard","energyLeft","virtualHand","toPlay","energyCap","affordable","filter","sort","a","b","pick","placeDelay","allowed","batch","find","h","actions","ai2","attackers","effectiveDefDamage","def","atkCard","enemyFieldNow","tauntsNow","x","poolNow","killable","t","surviveKill","target","enemyFieldLatest","tauntsL","poolL","killablesL","targetL","per","runAttack","total","aiPlay","aiNow","canWarlord","attackerOwner","attackerKind","attackerUid","targetKind","targetUidMaybe","attackerId","targetId","fromOwner","fromId","toId","ts","atkP","defOwner","defP","dmgList","attacker","defender","aToD","dToA","amount","toHero","riposte","toDef","keysList","d","key","some","doWarlordAttackVsPlayer","defenderUid","aDmg","dDmg","newShield","taken","doWarlordAttackVsCreature","creature","dmg","prevHp","inflicted","healed","newHp","doAttackCreatureVsPlayer","defenderTook","heal","doAttackCreatureVsCreature","toClear","k","includes","_p1Ref$current$hp","_p1Ref$current","_p2Ref$current$hp","_p2Ref$current","p1hp","p2hp","_p2Ref$current2","_p1Ref$current2","expectedTurn","restart","useEffect","you","enemy","Nav","_jsxs","style","display","gap","flexWrap","borderTop","paddingTop","marginTop","children","_jsx","className","onClick","padding","color","PlayerBoard","player","isSelf","onCardClick","selectable","highlightAttacker","Arena","p1Field","p2Field","p1Hp","p2Hp","p1WarlordUsed","onPlaceAt","slotIndex","card","units","u","slots","Array","fill","fb","idx","Number","isInteger","slot","newUnit","dir","from","Boolean","onSelectAttacker","clickFieldCard","onSelectWarlord","isWarlord","onWarlordAbility","onAttackCard","defUid","enemyHasTaunt","onAttackWarlord","cardUid","onAttackPlayer","alignItems","fontSize","margin","position","width","height","flex","title","ceil","inset","borderRadius","background","disabled","justifyContent","pointerEvents","fontWeight","paddingLeft","lineHeight","maxHeight","overflowY","listStyle","marginBottom","zIndex","textAlign","minWidth","_ref","cardStyle","boxShadow","transition","join","border","bottom","right","_ref2","AimLine","_","transform","_Fragment","opacity","top","textShadow","animation","selected","can","isSelected","canSkill","e","stopPropagation","_ref3","setStyle","React","fromEl","document","querySelector","CSS","escape","toEl","getBoundingClientRect","tb","sx","sy","dx","dy","len","hypot","ang","atan2","PI","transformOrigin"],"sourceRoot":""}